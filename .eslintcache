[{"E:\\Source Code\\my-app\\src\\index.js":"1","E:\\Source Code\\my-app\\src\\store.js":"2","E:\\Source Code\\my-app\\src\\serviceWorker.js":"3","E:\\Source Code\\my-app\\src\\App.js":"4","E:\\Source Code\\my-app\\src\\reducers\\root.js":"5","E:\\Source Code\\my-app\\src\\reducers\\dataMembers.js":"6","E:\\Source Code\\my-app\\src\\reducers\\sampleMembers.js":"7","E:\\Source Code\\my-app\\src\\components\\todo-container\\TodoContainer.js":"8","E:\\Source Code\\my-app\\src\\components\\change-theme\\ChangeThem.js":"9","E:\\Source Code\\my-app\\src\\redux\\demoRedux.js":"10","E:\\Source Code\\my-app\\src\\reducers\\visibleTodoFilter.reducer.js":"11","E:\\Source Code\\my-app\\src\\reducers\\visibleTheme.reducer.js":"12","E:\\Source Code\\my-app\\src\\reducers\\todoList.reducer.js":"13","E:\\Source Code\\my-app\\src\\constants\\ActionTypes.js":"14","E:\\Source Code\\my-app\\src\\constants\\visibleState.js":"15","E:\\Source Code\\my-app\\src\\components\\Total\\Total.js":"16","E:\\Source Code\\my-app\\src\\actions\\index.js":"17","E:\\Source Code\\my-app\\src\\actions\\theme.action.js":"18","E:\\Source Code\\my-app\\src\\components\\todo-container\\add-item-form\\AddItemForm.js":"19","E:\\Source Code\\my-app\\src\\components\\todo-container\\todo-item\\ToDoItem.js":"20","E:\\Source Code\\my-app\\src\\components\\todo-container\\empty-list\\EmptyList.js":"21","E:\\Source Code\\my-app\\src\\components\\List\\List.js":"22","E:\\Source Code\\my-app\\src\\components\\Search\\Search.js":"23","E:\\Source Code\\my-app\\src\\components\\Message\\Message.js":"24","E:\\Source Code\\my-app\\src\\redux\\actions\\index.js":"25","E:\\Source Code\\my-app\\src\\redux\\reducers\\index.js":"26","E:\\Source Code\\my-app\\src\\actions\\todo-item.action.js":"27","E:\\Source Code\\my-app\\src\\actions\\visibleTodoFitler.action.js":"28","E:\\Source Code\\my-app\\src\\redux\\reducers\\status.js":"29","E:\\Source Code\\my-app\\src\\redux\\reducers\\sort.js":"30","E:\\Source Code\\my-app\\src\\components\\List\\Item.js":"31","E:\\Source Code\\my-app\\src\\redux\\constants\\ActionTypes.js":"32","E:\\Source Code\\my-app\\src\\reducers\\TaskReducer.js":"33","E:\\Source Code\\my-app\\src\\components\\user-manager\\AddUser.js":"34","E:\\Source Code\\my-app\\src\\components\\user-manager\\EditUser.js":"35","E:\\Source Code\\my-app\\src\\components\\user-manager\\Header.js":"36","E:\\Source Code\\my-app\\src\\components\\user-manager\\Search.js":"37","E:\\Source Code\\my-app\\src\\components\\user-manager\\TableData.js":"38","E:\\Source Code\\my-app\\src\\components\\user-manager\\TableDataRow.js":"39","E:\\Source Code\\my-app\\src\\components\\Display\\Card.js":"40","E:\\Source Code\\my-app\\src\\components\\Display\\TopCard.js":"41","E:\\Source Code\\my-app\\src\\components\\Display\\UserGroup.js":"42","E:\\Source Code\\my-app\\src\\components\\Display\\NameTeam.js":"43","E:\\Source Code\\my-app\\src\\components\\Display\\User.js":"44","E:\\Source Code\\my-app\\src\\components\\Display\\Icon.js":"45","E:\\Source Code\\my-app\\src\\components\\Display\\Header.js":"46","E:\\Source Code\\my-app\\src\\views\\Display.js":"47","E:\\Source Code\\my-app\\src\\views\\Home.js":"48","E:\\Source Code\\my-app\\src\\views\\TodoList.js":"49","E:\\Source Code\\my-app\\src\\views\\UserManager.js":"50","E:\\Source Code\\my-app\\src\\store\\configureStore.js":"51","E:\\Source Code\\my-app\\src\\utils\\localStorage.js":"52","E:\\Source Code\\my-app\\src\\views\\Color.js":"53","E:\\Source Code\\my-app\\src\\constants\\GlobalConstants.js":"54","E:\\Source Code\\my-app\\src\\reducers\\SettingsReducer.js":"55","E:\\Source Code\\my-app\\src\\reducers\\GradientsReducer.js":"56","E:\\Source Code\\my-app\\src\\reducers\\ColorsReducer.js":"57","E:\\Source Code\\my-app\\src\\actions\\GradientsActions.js":"58","E:\\Source Code\\my-app\\src\\actions\\ColorsActions.js":"59","E:\\Source Code\\my-app\\src\\actions\\SettingsActions.js":"60","E:\\Source Code\\my-app\\src\\selectors\\SettingsSelectors.js":"61","E:\\Source Code\\my-app\\src\\selectors\\ColorsSelectors.js":"62","E:\\Source Code\\my-app\\src\\selectors\\GradientsSelectors.js":"63","E:\\Source Code\\my-app\\src\\utils\\index.js":"64","E:\\Source Code\\my-app\\src\\utils\\preventClick.js":"65","E:\\Source Code\\my-app\\src\\utils\\calculateStop.js":"66","E:\\Source Code\\my-app\\src\\utils\\offset.js":"67","E:\\Source Code\\my-app\\src\\utils\\copyToClipboard.js":"68","E:\\Source Code\\my-app\\src\\utils\\setGradient.js":"69","E:\\Source Code\\my-app\\src\\utils\\getRandomColor.js":"70","E:\\Source Code\\my-app\\src\\components\\nav.js":"71","E:\\Source Code\\my-app\\src\\layouts\\index.js":"72","E:\\Source Code\\my-app\\src\\routes.js":"73","E:\\Source Code\\my-app\\src\\containers\\GradientsContainer.js":"74","E:\\Source Code\\my-app\\src\\containers\\ColorsContainer.js":"75","E:\\Source Code\\my-app\\src\\components\\colors.js":"76","E:\\Source Code\\my-app\\src\\components\\gradients.js":"77","E:\\Source Code\\my-app\\src\\components\\button.js":"78","E:\\Source Code\\my-app\\src\\components\\background.js":"79","E:\\Source Code\\my-app\\src\\components\\copy.js":"80","E:\\Source Code\\my-app\\src\\components\\settings.js":"81","E:\\Source Code\\my-app\\src\\components\\Icon.js":"82","E:\\Source Code\\my-app\\src\\components\\color-rendered.js":"83","E:\\Source Code\\my-app\\src\\components\\circle.js":"84","E:\\Source Code\\my-app\\src\\components\\color-picker.js":"85","E:\\Source Code\\my-app\\src\\views\\NotFound.js":"86","E:\\Source Code\\my-app\\src\\views\\Menu.js":"87","E:\\Source Code\\my-app\\src\\views\\routes.js":"88","E:\\Source Code\\my-app\\src\\reducers\\DataMembers.js":"89","E:\\Source Code\\my-app\\src\\views\\TranscriptCalculate.js":"90","E:\\Source Code\\my-app\\src\\reducers\\TranscriptReducer.js":"91","E:\\Source Code\\my-app\\src\\components\\TranscriptCalculate\\CurrentView.js":"92","E:\\Source Code\\my-app\\src\\components\\TranscriptCalculate\\UpdateView.js":"93","E:\\Source Code\\my-app\\src\\chart\\lineChart.jsx":"94","E:\\Source Code\\my-app\\src\\chart\\basicChart.jsx":"95","E:\\Source Code\\my-app\\src\\chart\\raceChart.jsx":"96","E:\\Source Code\\my-app\\src\\chart\\donutChart.jsx":"97","E:\\Source Code\\my-app\\src\\chart\\data\\dataLineChart.jsx":"98","E:\\Source Code\\my-app\\src\\chart\\data\\dataDonutChart.jsx":"99","E:\\Source Code\\my-app\\src\\views\\Statistical.js":"100","E:\\Source Code\\my-app\\src\\chart\\data\\dataBasicChart.jsx":"101","E:\\Source Code\\my-app\\src\\reducers\\TaiKhoanReducer.js":"102","E:\\Source Code\\my-app\\src\\components\\Blockchain\\EntryForm.js":"103","E:\\Source Code\\my-app\\src\\components\\Blockchain\\Result.js":"104"},{"size":1320,"mtime":1616469618265,"results":"105","hashOfConfig":"106"},{"size":231,"mtime":1615877006762,"results":"107","hashOfConfig":"106"},{"size":5227,"mtime":1615877006761,"results":"108","hashOfConfig":"106"},{"size":3723,"mtime":1616767537979,"results":"109","hashOfConfig":"106"},{"size":913,"mtime":1616584900928,"results":"110","hashOfConfig":"106"},{"size":2861,"mtime":1614962341407,"results":"111","hashOfConfig":"112"},{"size":455,"mtime":1616466413829,"results":"113","hashOfConfig":"106"},{"size":1661,"mtime":1608878784582,"results":"114","hashOfConfig":"115"},{"size":1067,"mtime":1613708323772,"results":"116","hashOfConfig":"112"},{"size":690,"mtime":1613649061703,"results":"117","hashOfConfig":"115"},{"size":368,"mtime":1615877006736,"results":"118","hashOfConfig":"106"},{"size":303,"mtime":1615877006735,"results":"119","hashOfConfig":"106"},{"size":1013,"mtime":1615877006735,"results":"120","hashOfConfig":"106"},{"size":2458,"mtime":1616767062715,"results":"121","hashOfConfig":"106"},{"size":114,"mtime":1615877006730,"results":"122","hashOfConfig":"106"},{"size":718,"mtime":1615877006721,"results":"123","hashOfConfig":"106"},{"size":2331,"mtime":1616770440941,"results":"124","hashOfConfig":"106"},{"size":167,"mtime":1613893980648,"results":"125","hashOfConfig":"112"},{"size":3374,"mtime":1613709242816,"results":"126","hashOfConfig":"115"},{"size":3452,"mtime":1608878784583,"results":"127","hashOfConfig":"115"},{"size":313,"mtime":1608878784583,"results":"128","hashOfConfig":"115"},{"size":777,"mtime":1615877006719,"results":"129","hashOfConfig":"106"},{"size":3076,"mtime":1615877006720,"results":"130","hashOfConfig":"106"},{"size":875,"mtime":1616847184699,"results":"131","hashOfConfig":"106"},{"size":253,"mtime":1613649061701,"results":"132","hashOfConfig":"115"},{"size":258,"mtime":1613649061703,"results":"133","hashOfConfig":"115"},{"size":548,"mtime":1608878784543,"results":"134","hashOfConfig":"115"},{"size":169,"mtime":1608878784543,"results":"135","hashOfConfig":"115"},{"size":213,"mtime":1613649061704,"results":"136","hashOfConfig":"115"},{"size":378,"mtime":1613649061704,"results":"137","hashOfConfig":"115"},{"size":7305,"mtime":1615877006718,"results":"138","hashOfConfig":"106"},{"size":72,"mtime":1613649061702,"results":"139","hashOfConfig":"115"},{"size":4995,"mtime":1615877006734,"results":"140","hashOfConfig":"106"},{"size":2878,"mtime":1615877006728,"results":"141","hashOfConfig":"106"},{"size":2578,"mtime":1615877006728,"results":"142","hashOfConfig":"106"},{"size":411,"mtime":1615877006728,"results":"143","hashOfConfig":"106"},{"size":384,"mtime":1615877006728,"results":"144","hashOfConfig":"106"},{"size":1033,"mtime":1615877006729,"results":"145","hashOfConfig":"106"},{"size":1335,"mtime":1615877006729,"results":"146","hashOfConfig":"106"},{"size":2166,"mtime":1616466120551,"results":"147","hashOfConfig":"106"},{"size":2478,"mtime":1615877006717,"results":"148","hashOfConfig":"106"},{"size":2252,"mtime":1615877006717,"results":"149","hashOfConfig":"106"},{"size":388,"mtime":1615877006716,"results":"150","hashOfConfig":"106"},{"size":673,"mtime":1615877006717,"results":"151","hashOfConfig":"106"},{"size":352,"mtime":1615877006716,"results":"152","hashOfConfig":"106"},{"size":1179,"mtime":1615877006716,"results":"153","hashOfConfig":"106"},{"size":4033,"mtime":1615877006769,"results":"154","hashOfConfig":"106"},{"size":376,"mtime":1615877006769,"results":"155","hashOfConfig":"106"},{"size":1854,"mtime":1616846847607,"results":"156","hashOfConfig":"106"},{"size":4708,"mtime":1615877006774,"results":"157","hashOfConfig":"106"},{"size":715,"mtime":1615877006763,"results":"158","hashOfConfig":"106"},{"size":627,"mtime":1615877006766,"results":"159","hashOfConfig":"106"},{"size":802,"mtime":1615877006768,"results":"160","hashOfConfig":"106"},{"size":259,"mtime":1615877006729,"results":"161","hashOfConfig":"106"},{"size":489,"mtime":1616494785483,"results":"162","hashOfConfig":"106"},{"size":4533,"mtime":1615877006733,"results":"163","hashOfConfig":"106"},{"size":941,"mtime":1615877006733,"results":"164","hashOfConfig":"106"},{"size":3871,"mtime":1615877006707,"results":"165","hashOfConfig":"106"},{"size":2016,"mtime":1615877006707,"results":"166","hashOfConfig":"106"},{"size":740,"mtime":1615877006707,"results":"167","hashOfConfig":"106"},{"size":242,"mtime":1615877006761,"results":"168","hashOfConfig":"106"},{"size":656,"mtime":1615877006760,"results":"169","hashOfConfig":"106"},{"size":745,"mtime":1615877006760,"results":"170","hashOfConfig":"106"},{"size":290,"mtime":1615877006766,"results":"171","hashOfConfig":"106"},{"size":85,"mtime":1615877006767,"results":"172","hashOfConfig":"106"},{"size":107,"mtime":1615877006764,"results":"173","hashOfConfig":"106"},{"size":318,"mtime":1615877006766,"results":"174","hashOfConfig":"106"},{"size":822,"mtime":1615877006764,"results":"175","hashOfConfig":"106"},{"size":1707,"mtime":1615877006767,"results":"176","hashOfConfig":"106"},{"size":264,"mtime":1615877006765,"results":"177","hashOfConfig":"106"},{"size":1289,"mtime":1615877006725,"results":"178","hashOfConfig":"106"},{"size":627,"mtime":1615877006732,"results":"179","hashOfConfig":"106"},{"size":511,"mtime":1615877006738,"results":"180","hashOfConfig":"106"},{"size":3391,"mtime":1615877006730,"results":"181","hashOfConfig":"106"},{"size":1234,"mtime":1615877006730,"results":"182","hashOfConfig":"106"},{"size":1811,"mtime":1615877006724,"results":"183","hashOfConfig":"106"},{"size":4834,"mtime":1615877006724,"results":"184","hashOfConfig":"106"},{"size":478,"mtime":1615877006723,"results":"185","hashOfConfig":"106"},{"size":392,"mtime":1615877006722,"results":"186","hashOfConfig":"106"},{"size":588,"mtime":1615877006724,"results":"187","hashOfConfig":"106"},{"size":956,"mtime":1615877006725,"results":"188","hashOfConfig":"106"},{"size":346,"mtime":1615877006718,"results":"189","hashOfConfig":"106"},{"size":3575,"mtime":1615877006724,"results":"190","hashOfConfig":"106"},{"size":1746,"mtime":1615877006723,"results":"191","hashOfConfig":"106"},{"size":793,"mtime":1615877006724,"results":"192","hashOfConfig":"106"},{"size":263,"mtime":1615877006770,"results":"193","hashOfConfig":"106"},{"size":9482,"mtime":1615877006770,"results":"194","hashOfConfig":"106"},{"size":1454,"mtime":1615264338998,"results":"195","hashOfConfig":"112"},{"size":2713,"mtime":1617022331998,"results":"196","hashOfConfig":"106"},{"size":2535,"mtime":1617015503300,"results":"197","hashOfConfig":"106"},{"size":3658,"mtime":1616496361785,"results":"198","hashOfConfig":"106"},{"size":5724,"mtime":1616497693343,"results":"199","hashOfConfig":"106"},{"size":1332,"mtime":1616587655865,"results":"200","hashOfConfig":"106"},{"size":2188,"mtime":1615877006714,"results":"201","hashOfConfig":"106"},{"size":3145,"mtime":1615877006712,"results":"202","hashOfConfig":"106"},{"size":1761,"mtime":1615877006715,"results":"203","hashOfConfig":"106"},{"size":3811,"mtime":1615877006714,"results":"204","hashOfConfig":"106"},{"size":461,"mtime":1615877006714,"results":"205","hashOfConfig":"106"},{"size":595,"mtime":1615877006713,"results":"206","hashOfConfig":"106"},{"size":447,"mtime":1615877006771,"results":"207","hashOfConfig":"106"},{"size":461,"mtime":1608809099594,"results":"208","hashOfConfig":"112"},{"size":3748,"mtime":1617023678172,"results":"209","hashOfConfig":"106"},{"size":12559,"mtime":1617022849315,"results":"210","hashOfConfig":"106"},{"size":4509,"mtime":1617021309721,"results":"211","hashOfConfig":"106"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"215"},"4829z4",{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"226"},"1qmqi9o",{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},"vrv1zh",{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"238"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"215"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314","usedDeprecatedRules":"215"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"319","usedDeprecatedRules":"215"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328","usedDeprecatedRules":"215"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"333","usedDeprecatedRules":"215"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"336","usedDeprecatedRules":"215"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339","usedDeprecatedRules":"215"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"378","usedDeprecatedRules":"215"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"381","usedDeprecatedRules":"215"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"394","usedDeprecatedRules":"215"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"397","usedDeprecatedRules":"215"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"404","usedDeprecatedRules":"215"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"407"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"414","usedDeprecatedRules":"415"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"418","usedDeprecatedRules":"419"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"419"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"424","usedDeprecatedRules":"215"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"427","usedDeprecatedRules":"215"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"430","usedDeprecatedRules":"215"},{"filePath":"431","messages":"432","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"433","usedDeprecatedRules":"215"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"442","messages":"443","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"444","messages":"445","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"446","messages":"447","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"448","usedDeprecatedRules":"215"},"E:\\Source Code\\my-app\\src\\index.js",["449"],"import '@babel/polyfill';\r\nimport React from 'react';\r\n// import './index.scss';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\n//store\r\n// import { createStore } from \"redux\";\r\n// import myReducer from \"./reducers/index\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\n// import \"bootstrap/dist/css/bootstrap.min.css\";\r\n// import \"./assets/scss/reset.scss\";\r\n// import \"./assets/scss/components.scss\";\r\n// import { HashRouter } from 'react-router-dom';\r\nimport configureStore from './store/configureStore';\r\nimport { getLocalStorage } from './utils/localStorage';\r\n\r\n// const store = createStore(myReducer);\r\nconst persisted = getLocalStorage();\r\n\r\nReactDOM.render(\r\n  // <React.StrictMode>\r\n  <Provider \r\n    // store={store}\r\n    store={configureStore(persisted)}>\r\n      <App />\r\n  </Provider>,   \r\n  // </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n\r\n// const Main = () => (\r\n//   <Provider store={configureStore(persisted)}>\r\n//     <HashRouter basename=\"/\">\r\n//       <App />\r\n//     </HashRouter>\r\n//   </Provider>\r\n// );\r\n\r\n// ReactDOM.render(\r\n//     <Main />, \r\n//   document.getElementById('root'));",["450","451"],"E:\\Source Code\\my-app\\src\\store.js",[],"E:\\Source Code\\my-app\\src\\serviceWorker.js",[],"E:\\Source Code\\my-app\\src\\App.js",[],"E:\\Source Code\\my-app\\src\\reducers\\root.js",[],"E:\\Source Code\\my-app\\src\\reducers\\dataMembers.js",[],["452","453"],"E:\\Source Code\\my-app\\src\\reducers\\sampleMembers.js",[],"E:\\Source Code\\my-app\\src\\components\\todo-container\\TodoContainer.js",[],["454","455"],"E:\\Source Code\\my-app\\src\\components\\change-theme\\ChangeThem.js",[],["456","457"],"E:\\Source Code\\my-app\\src\\redux\\demoRedux.js",["458"],"import { createStore } from \"redux\";\r\nimport {status, sort} from \"./actions/index\";\r\nimport myReducer from \"./reducers/index\";\r\n\r\nconst store = createStore(myReducer);\r\n\r\nconsole.log('Default: ',store.getState());\r\n//Thuc hien cong viec thay doi status\r\n// var action = { type : \"TOGGLE_STATUS\"};\r\n\r\n// store.dispatch(action);\r\nstore.dispatch(status());\r\n\r\nconsole.log('TOGGLE_STATUS: ',store.getState());\r\n//Thuc hien cong viec sap xep ten tu Z - A\r\nvar sortAction = { \r\n    type : \"SORT\",\r\n    sort : { \r\n        by : \"name\",\r\n        value: -1\r\n    }\r\n}\r\n// store.dispatch(sortAction);\r\nstore.dispatch(sort({\r\n    by: \"name\",\r\n    value: -1\r\n}));\r\nconsole.log('SORT: ',store.getState());",["459","460"],"E:\\Source Code\\my-app\\src\\reducers\\visibleTodoFilter.reducer.js",[],"E:\\Source Code\\my-app\\src\\reducers\\visibleTheme.reducer.js",[],"E:\\Source Code\\my-app\\src\\reducers\\todoList.reducer.js",[],"E:\\Source Code\\my-app\\src\\constants\\ActionTypes.js",[],"E:\\Source Code\\my-app\\src\\constants\\visibleState.js",[],"E:\\Source Code\\my-app\\src\\components\\Total\\Total.js",[],"E:\\Source Code\\my-app\\src\\actions\\index.js",[],"E:\\Source Code\\my-app\\src\\actions\\theme.action.js",[],"E:\\Source Code\\my-app\\src\\components\\todo-container\\add-item-form\\AddItemForm.js",[],"E:\\Source Code\\my-app\\src\\components\\todo-container\\todo-item\\ToDoItem.js",[],"E:\\Source Code\\my-app\\src\\components\\todo-container\\empty-list\\EmptyList.js",[],"E:\\Source Code\\my-app\\src\\components\\List\\List.js",[],"E:\\Source Code\\my-app\\src\\components\\Search\\Search.js",[],"E:\\Source Code\\my-app\\src\\components\\Message\\Message.js",[],"E:\\Source Code\\my-app\\src\\redux\\actions\\index.js",[],"E:\\Source Code\\my-app\\src\\redux\\reducers\\index.js",[],"E:\\Source Code\\my-app\\src\\actions\\todo-item.action.js",[],"E:\\Source Code\\my-app\\src\\actions\\visibleTodoFitler.action.js",[],"E:\\Source Code\\my-app\\src\\redux\\reducers\\status.js",[],"E:\\Source Code\\my-app\\src\\redux\\reducers\\sort.js",[],"E:\\Source Code\\my-app\\src\\components\\List\\Item.js",[],"E:\\Source Code\\my-app\\src\\redux\\constants\\ActionTypes.js",[],"E:\\Source Code\\my-app\\src\\reducers\\TaskReducer.js",[],"E:\\Source Code\\my-app\\src\\components\\user-manager\\AddUser.js",[],"E:\\Source Code\\my-app\\src\\components\\user-manager\\EditUser.js",[],"E:\\Source Code\\my-app\\src\\components\\user-manager\\Header.js",[],"E:\\Source Code\\my-app\\src\\components\\user-manager\\Search.js",[],"E:\\Source Code\\my-app\\src\\components\\user-manager\\TableData.js",[],"E:\\Source Code\\my-app\\src\\components\\user-manager\\TableDataRow.js",[],"E:\\Source Code\\my-app\\src\\components\\Display\\Card.js",[],"E:\\Source Code\\my-app\\src\\components\\Display\\TopCard.js",["461"],"import NameTeam from \"./NameTeam.js\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./TopCard.css\";\r\nimport * as action from \"./../../actions/index\";\r\nimport { BsTrashFill } from \"react-icons/bs\";\r\nimport { FaCheckCircle, FaPencilAlt } from \"react-icons/fa\";\r\nimport styled from 'styled-components';\r\n\r\nfunction TopCard(props) {\r\n  const {\r\n    handleEditTeamName,\r\n    name,\r\n    id,\r\n    isEditing,\r\n    deleteTeamById,\r\n    changeNameById\r\n  } = props;\r\n\r\n  const iconStyle = {\r\n      color: \"green\"\r\n    }\r\n\r\n  const [value, setValue] = useState(name);\r\n\r\n  function handleClearTeam() {\r\n    deleteTeamById(id);\r\n  }\r\n\r\n  useEffect(() => {\r\n    setValue(name)\r\n  }, [isEditing])\r\n\r\n  function handleSaveName(event) {\r\n    handleEditTeamName(id, event);\r\n    changeNameById(id, value);\r\n  }\r\n\r\n  function handleChangeName(event) {\r\n    const { value: newName } = event.target;\r\n    setValue(newName);\r\n  }\r\n\r\n  return (\r\n      <span className=\"topCardStyle\">\r\n        {(isEditing)\r\n          ?\r\n          <span>\r\n            <Input\r\n              type=\"text\"\r\n              onChange={handleChangeName}\r\n            />\r\n            <FaCheckCircle \r\n              className=\"iconStyle symbolStyle\"\r\n              style={iconStyle}\r\n              onClick={handleSaveName}\r\n            />\r\n          </span>\r\n          :\r\n          <span>\r\n            <NameTeam\r\n              className=\"nameStyle\"\r\n              name={name}\r\n            />\r\n            <span className=\"iconStyle\">\r\n              <FaPencilAlt\r\n                className=\"symbolStyle\"\r\n                onClick={handleSaveName} \r\n              />\r\n              <BsTrashFill\r\n                className=\"symbolStyle\" \r\n                onClick={handleClearTeam} \r\n              />\r\n            </span>\r\n          </span>\r\n        }\r\n      </span>)\r\n}\r\n\r\nTopCard.propTypes = {\r\n  isEditing: PropTypes.bool,\r\n  id: PropTypes.string,\r\n  handleEditTeamName: PropTypes.func,\r\n  name: PropTypes.string\r\n};\r\n\r\nconst Input = styled.input`\r\n  border-bottom: 2px solid #337AB7;\r\n  margin-left: 50px;\r\n`;\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n  return {\r\n      deleteTeamById: (id) => {\r\n        dispatch(action.deleteTeamById(id));\r\n      },\r\n      changeNameById: (id, value) => {\r\n        dispatch(action.changeNameById(id, value));\r\n      }\r\n  }\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(TopCard);;","E:\\Source Code\\my-app\\src\\components\\Display\\UserGroup.js",[],"E:\\Source Code\\my-app\\src\\components\\Display\\NameTeam.js",[],"E:\\Source Code\\my-app\\src\\components\\Display\\User.js",[],"E:\\Source Code\\my-app\\src\\components\\Display\\Icon.js",[],"E:\\Source Code\\my-app\\src\\components\\Display\\Header.js",[],"E:\\Source Code\\my-app\\src\\views\\Display.js",["462"],"import React, { useState, useEffect } from \"react\";\r\nimport Card from \"../components/Display/Card.js\";\r\nimport { connect } from \"react-redux\";\r\nimport { arrayMove } from 'react-sortable-hoc';\r\n// import { NavLink } from \"react-router-dom\";\r\nimport { SortableContainer } from 'react-sortable-hoc';\r\nimport * as action from '../actions/index';\r\nimport PropTypes from 'prop-types';\r\n// import Gallery from \"react-photo-gallery\";\r\n// import arrayMove from \"array-move\";\r\n\r\nfunction Display(props){\r\n    const { DataMembers, updateList } = props;\r\n    const [lists, setLists] = useState(DataMembers);\r\n    // const { match } = props;\r\n    // console.log(match)\r\n    // var url = match.url;\r\n    // const newData = DataMembers.map((item, index) => {\r\n    //   const newKey = { slug: item.name }\r\n    //   return {...item, ...newKey}\r\n    // })\r\n\r\n    const [edittingId, setEdittingId] = useState([]);\r\n    \r\n    const handleEditTeamName = (id) => {\r\n      const newEdittingId = edittingId.includes(id)\r\n        ?\r\n        edittingId.filter(item => item !== id)\r\n        :\r\n        [...edittingId, id];\r\n      setEdittingId(newEdittingId);\r\n    }\r\n\r\n    const onSortEnd = ({ oldIndex, newIndex }) => {\r\n      setLists(arrayMove(DataMembers, oldIndex, newIndex));\r\n      updateList(lists);\r\n    }\r\n\r\n    useEffect(() => {\r\n      updateList(lists)\r\n    }, [updateList, lists]);\r\n\r\n    const SortableList = SortableContainer(({ DataMembers }) => {\r\n    return (\r\n        <div className = \"grid-container\">\r\n        {DataMembers.map((post, index) =>\r\n          <Card\r\n            key={post.id}\r\n            isEditing={edittingId.includes(post.id)}\r\n            handleEditTeamName={handleEditTeamName}\r\n            index={index}\r\n            post={post}\r\n            id={post.id}\r\n            {...post}\r\n          />\r\n        )}\r\n        </div>)\r\n    });\r\n\r\n    return (\r\n      <SortableList\r\n        DataMembers={DataMembers}\r\n        onSortEnd={onSortEnd}\r\n        axis=\"xy\"\r\n        transitionDuration=\"0\"\r\n        helperClass=\"SortableHelper\"\r\n        distance={1}\r\n      />\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    DataMembers: state.DataMembers.currentState\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n  return {\r\n     updateList: newList => {\r\n      dispatch(action.updateList(newList));\r\n     }\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Display);\r\n\r\n{/* <NavLink to={`${url}/${post.slug}`}>\r\n<Card\r\n  isEditing={edittingId.includes(post.id)}\r\n  handleClearTeam={handleClearTeam}\r\n  newName={newName}\r\n  handleEditTeamName={handleEditTeamName}\r\n  key={post.id}\r\n  {...post}\r\n/>\r\n</NavLink> */}\r\n\r\nDisplay.propTypes = {\r\n  DataMembers: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string,\r\n      name: PropTypes.string,\r\n      creator: PropTypes.string,\r\n      memberIds: PropTypes.arrayOf(PropTypes.shape({\r\n        id: PropTypes.string,\r\n        email: PropTypes.string,\r\n        firstName: PropTypes.string,\r\n        lastName: PropTypes.string,\r\n        status: PropTypes.string\r\n      })),\r\n      managerIds: PropTypes.arrayOf(PropTypes.shape({\r\n        id: PropTypes.string,\r\n        email: PropTypes.string,\r\n        firstName: PropTypes.string,\r\n        lastName: PropTypes.string,\r\n        status: PropTypes.string\r\n      }))\r\n    }),\r\n  ),\r\n  isEditing: PropTypes.bool,\r\n  id: PropTypes.string,\r\n  name: PropTypes.string,\r\n  handleEditTeamName: PropTypes.func,\r\n  post: PropTypes.shape({\r\n    id: PropTypes.string,\r\n    name: PropTypes.string,\r\n    creator: PropTypes.string,\r\n    memberIds: PropTypes.arrayOf(PropTypes.shape({\r\n      id: PropTypes.string,\r\n      email: PropTypes.string,\r\n      firstName: PropTypes.string,\r\n      lastName: PropTypes.string,\r\n      status: PropTypes.string\r\n    })),\r\n    managerIds: PropTypes.arrayOf(PropTypes.shape({\r\n      id: PropTypes.string,\r\n      email: PropTypes.string,\r\n      firstName: PropTypes.string,\r\n      lastName: PropTypes.string,\r\n      status: PropTypes.string\r\n    }))\r\n  }),\r\n};","E:\\Source Code\\my-app\\src\\views\\Home.js",[],"E:\\Source Code\\my-app\\src\\views\\TodoList.js",["463","464","465","466","467"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport classNames from \"classnames\";\r\nimport Search from '../components/Search/Search';\r\nimport style from './TodoList.module.css';\r\nimport List from '../components/List/List';\r\nimport Message from '../components/Message/Message';\r\nimport Total from '../components/Total/Total';\r\n\r\nfunction TodoList(props) {\r\n    const { hidden } = props;\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        const data = JSON.parse(localStorage.getItem('task'));\r\n        if (data) {\r\n            dispatch({\r\n                type: 'SET_TASK',\r\n                data\r\n            });\r\n        }\r\n    })\r\n\r\n    const [appear, setAppear] = useState(true);\r\n\r\n    function processOpenList() {\r\n        setAppear(false);\r\n    };\r\n\r\n    function processCloseList() {\r\n        setAppear(true);\r\n    };\r\n\r\n    const message = useSelector(state => state.TaskReducer.message);\r\n\r\n    return (\r\n        <span>\r\n            {/* <button\r\n                className=\"my-button\"\r\n                onClick={processOpenList}>\r\n                DISPLAY TO DO\r\n            </button>\r\n            <button\r\n                className=\"my-button\"\r\n                onClick={processCloseList}>\r\n                CLOSE LIST\r\n            </button> */}\r\n            <span \r\n            // className={classNames({ hidden: appear})}\r\n            >\r\n            <span \r\n            // className={classNames({ hidden: hidden })}\r\n            >\r\n                <div className={style.containerTodo}>\r\n                    {message.active === true ? <Message /> : ''}\r\n                    <Total />\r\n                    <Search />\r\n                    <List />\r\n                </div>\r\n            </span>\r\n            </span>\r\n        </span>\r\n    )\r\n}\r\n\r\nexport default TodoList;\r\n","E:\\Source Code\\my-app\\src\\views\\UserManager.js",[],"E:\\Source Code\\my-app\\src\\store\\configureStore.js",[],"E:\\Source Code\\my-app\\src\\utils\\localStorage.js",[],"E:\\Source Code\\my-app\\src\\views\\Color.js",["468"],"import React, { useMemo } from 'react';\r\nimport { Switch } from 'react-router-dom';\r\nimport { PublicRoute } from '../layouts/index';\r\nimport routes from '../routes';\r\nimport Nav from '../components/nav';\r\n\r\nfunction Color() {\r\n  const renderRoutes = useMemo(() => {\r\n    if (routes.length > 0) {\r\n      return routes.map((route, index) => {\r\n        return (\r\n          <PublicRoute\r\n            key={index}\r\n            path={route.path}\r\n            exact={route.exact}\r\n            layout={route.layout}\r\n            component={route.component}\r\n          />\r\n        );\r\n      });\r\n    }\r\n    return null;\r\n  }, [routes]);\r\n\r\n  const renderNav = useMemo(() => <Nav />, []);\r\n\r\n  return (\r\n    <>\r\n      {renderNav}\r\n      <Switch>{renderRoutes}</Switch>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Color;\r\n","E:\\Source Code\\my-app\\src\\constants\\GlobalConstants.js",[],"E:\\Source Code\\my-app\\src\\reducers\\SettingsReducer.js",["469"],"import { \r\n  TOGGLE_PREFIX, \r\n  TOGGLE_FALLBACK \r\n} from '../constants/ActionTypes';\r\n\r\nconst initialState = {\r\n  prefix: false,\r\n  fallback: false\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case TOGGLE_PREFIX:\r\n      return {\r\n        ...state,\r\n        prefix: !state.prefix\r\n      };\r\n    case TOGGLE_FALLBACK:\r\n      return {\r\n        ...state,\r\n        fallback: !state.fallback\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","E:\\Source Code\\my-app\\src\\reducers\\GradientsReducer.js",["470"],"import {\r\n  GENERATE_GRADIENT_REQUEST,\r\n  GENERATE_GRADIENT_SUCCESS,\r\n  CHANGE_GRADIENT,\r\n  COPY_GRADIENT_TO_CLIPBOARD,\r\n  ADD_NEW_COLOR,\r\n  EDIT_ANGLE,\r\n  CHANGE_GRADIENT_DIRECTION,\r\n  TOGGLE_EDIT_COLOR_OF_GRADIENT,\r\n  EDIT_COLOR_OF_GRADIENT,\r\n  TOGGLE_SLIDER,\r\n  START_UPDATE_COLOR_STOP,\r\n  UPDATE_COLOR_STOP,\r\n  TOGGLE_PREFIX,\r\n  TOGGLE_FALLBACK,\r\n  DELETE_SELECTED_COLOR\r\n} from '../constants/ActionTypes';\r\nimport { calculateStop } from '../utils';\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  currentIndex: -1,\r\n  list: [],\r\n  isCopied: false,\r\n  editAngle: false\r\n};\r\n\r\nconst initialGradient = {\r\n  colors: [],\r\n  deg: 0,\r\n  colorIndexEditing: -1,\r\n  showSlider: false,\r\n  showHub: false\r\n};\r\n\r\nfunction gradient(state = initialGradient, action) {\r\n  switch (action.type) {\r\n    case GENERATE_GRADIENT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        colors: state.colors\r\n          .concat(action.colors)\r\n          .map((color, index, colors) => ({\r\n            color,\r\n            stop: calculateStop(100, colors.length, index)\r\n          })),\r\n        deg: action.deg\r\n      };\r\n    case ADD_NEW_COLOR:\r\n      return {\r\n        ...state,\r\n        colors: state.colors\r\n          .concat({ color: action.color })\r\n          .map((color, index, colors) => ({\r\n            ...color,\r\n            stop: calculateStop(100, colors.length, index)\r\n          })),\r\n        showHub: false\r\n      };\r\n    case CHANGE_GRADIENT_DIRECTION:\r\n      return {\r\n        ...state,\r\n        deg: action.deg\r\n      };\r\n    case TOGGLE_EDIT_COLOR_OF_GRADIENT:\r\n      return {\r\n        ...state,\r\n        colorIndexEditing: action.colorIndex,\r\n        showHub:\r\n          state.colorIndexEditing !== action.colorIndex ? true : !state.showHub\r\n      };\r\n    case EDIT_COLOR_OF_GRADIENT:\r\n      return {\r\n        ...state,\r\n        colors: state.colors.map((color, index) => {\r\n          return index === state.colorIndexEditing\r\n            ? { ...color, color: action.color }\r\n            : color;\r\n        })\r\n      };\r\n    case TOGGLE_SLIDER:\r\n      return {\r\n        ...state,\r\n        showSlider: !state.showSlider,\r\n        showHub: false,\r\n        colors: [].concat(\r\n          state.colors.sort((left, right) => left.stop - right.stop)\r\n        )\r\n      };\r\n    case START_UPDATE_COLOR_STOP:\r\n      return {\r\n        ...state,\r\n        colorIndexEditing: action.colorIndex\r\n      };\r\n    case UPDATE_COLOR_STOP:\r\n      return {\r\n        ...state,\r\n        colors: state.colors.map((color, index) => {\r\n          return index === state.colorIndexEditing\r\n            ? { ...color, stop: action.percent }\r\n            : color;\r\n        })\r\n      };\r\n    case DELETE_SELECTED_COLOR:\r\n      return {\r\n        ...state,\r\n        colors: [\r\n          ...state.colors.filter(\r\n            (_, index) => index !== state.colorIndexEditing\r\n          )\r\n        ],\r\n        colorIndexEditing: -1,\r\n        showHub: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GENERATE_GRADIENT_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    case GENERATE_GRADIENT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        isCopied: false,\r\n        editAngle: false,\r\n        currentIndex: state.list.length,\r\n        list: [...state.list, gradient(undefined, action)]\r\n      };\r\n    case CHANGE_GRADIENT:\r\n      return {\r\n        ...state,\r\n        currentIndex: action.index,\r\n        isCopied: false,\r\n        editAngle: false\r\n      };\r\n    case COPY_GRADIENT_TO_CLIPBOARD:\r\n      return {\r\n        ...state,\r\n        isCopied: true,\r\n        editAngle: false\r\n      };\r\n    case START_UPDATE_COLOR_STOP:\r\n    case UPDATE_COLOR_STOP:\r\n    case ADD_NEW_COLOR:\r\n    case EDIT_COLOR_OF_GRADIENT:\r\n    case TOGGLE_EDIT_COLOR_OF_GRADIENT:\r\n    case CHANGE_GRADIENT_DIRECTION:\r\n    case TOGGLE_SLIDER:\r\n    case DELETE_SELECTED_COLOR:\r\n      return {\r\n        ...state,\r\n        isCopied: false,\r\n        list: state.list.map((item, index) => {\r\n          return index === state.currentIndex\r\n            ? gradient(state.list[state.currentIndex], action)\r\n            : item;\r\n        })\r\n      };\r\n    case EDIT_ANGLE:\r\n      return {\r\n        ...state,\r\n        editAngle: !state.editAngle,\r\n        isCopied: false\r\n      };\r\n    case TOGGLE_PREFIX:\r\n    case TOGGLE_FALLBACK:\r\n      return {\r\n        ...state,\r\n        isCopied: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","E:\\Source Code\\my-app\\src\\reducers\\ColorsReducer.js",["471"],"import {\r\n  GENERATE_COLOR_REQUEST,\r\n  GENERATE_COLOR_SUCCESS,\r\n  CHANGE_COLOR,\r\n  COPY_COLOR_TO_CLIPBOARD\r\n} from '../constants/ActionTypes';\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  currentIndex: -1,\r\n  list: [],\r\n  isCopied: false\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GENERATE_COLOR_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    case GENERATE_COLOR_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        isCopied: false,\r\n        currentIndex: state.list.length,\r\n        list: [...state.list, action.color]\r\n      };\r\n    case CHANGE_COLOR:\r\n      return {\r\n        ...state,\r\n        currentIndex: action.index,\r\n        isCopied: false\r\n      };\r\n    case COPY_COLOR_TO_CLIPBOARD:\r\n      return {\r\n        ...state,\r\n        isCopied: action.successful\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","E:\\Source Code\\my-app\\src\\actions\\GradientsActions.js",[],"E:\\Source Code\\my-app\\src\\actions\\ColorsActions.js",[],"E:\\Source Code\\my-app\\src\\actions\\SettingsActions.js",[],"E:\\Source Code\\my-app\\src\\selectors\\SettingsSelectors.js",[],"E:\\Source Code\\my-app\\src\\selectors\\ColorsSelectors.js",[],"E:\\Source Code\\my-app\\src\\selectors\\GradientsSelectors.js",[],"E:\\Source Code\\my-app\\src\\utils\\index.js",[],"E:\\Source Code\\my-app\\src\\utils\\preventClick.js",[],"E:\\Source Code\\my-app\\src\\utils\\calculateStop.js",[],"E:\\Source Code\\my-app\\src\\utils\\offset.js",[],"E:\\Source Code\\my-app\\src\\utils\\copyToClipboard.js",[],"E:\\Source Code\\my-app\\src\\utils\\setGradient.js",[],"E:\\Source Code\\my-app\\src\\utils\\getRandomColor.js",[],"E:\\Source Code\\my-app\\src\\components\\nav.js",[],"E:\\Source Code\\my-app\\src\\layouts\\index.js",[],"E:\\Source Code\\my-app\\src\\routes.js",[],"E:\\Source Code\\my-app\\src\\containers\\GradientsContainer.js",[],"E:\\Source Code\\my-app\\src\\containers\\ColorsContainer.js",[],"E:\\Source Code\\my-app\\src\\components\\colors.js",["472"],"import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Background from './background';\r\nimport Button from './button';\r\nimport Copy from './copy';\r\nimport Icon from './Icon';\r\n\r\nconst propTypes = {\r\n  color: PropTypes.string,\r\n  isCopied: PropTypes.bool.isRequired,\r\n  onGenerateColor: PropTypes.func.isRequired,\r\n  prevColor: PropTypes.func.isRequired,\r\n  nextColor: PropTypes.func.isRequired,\r\n  copyColorToClipboard: PropTypes.func.isRequired,\r\n  generateColorIfNeeded: PropTypes.func.isRequired\r\n};\r\n\r\nconst Colors = ({\r\n  color,\r\n  isCopied,\r\n  onGenerateColor,\r\n  prevColor,\r\n  nextColor,\r\n  copyColorToClipboard,\r\n  generateColorIfNeeded\r\n}) => {\r\n  useEffect(() => {\r\n    generateColorIfNeeded();\r\n    document.title = 'AnyColorReact - Colors';\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"colors\">\r\n      <div className=\"inner\">\r\n        <Background color={color}>\r\n          {color && (\r\n            <Copy copyToClipboard={copyColorToClipboard} isCopied={isCopied} />\r\n          )}\r\n        </Background>\r\n        <div className=\"colors__value\">{color}</div>\r\n        <div className=\"colors__actions\">\r\n          <Button\r\n            onClick={onGenerateColor}\r\n            className=\"colors__action colors__action--generate awesome-hover\"\r\n          >\r\n            <Icon className=\"icon\">refresh</Icon> Generate\r\n          </Button>\r\n          <Button onClick={prevColor} className=\"colors__action awesome-hover\">\r\n            <Icon className=\"icon\">arrow_left</Icon> Back\r\n          </Button>\r\n          <Button onClick={nextColor} className=\"colors__action awesome-hover\">\r\n            Next <Icon className=\"icon\">arrow_right</Icon>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nColors.propTypes = propTypes;\r\n\r\nexport default Colors;\r\n","E:\\Source Code\\my-app\\src\\components\\gradients.js",["473"],"import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Background from './background';\r\nimport Button from './button';\r\nimport Circle from './circle';\r\nimport Copy from './copy';\r\nimport Settings from './settings';\r\nimport ColorRendered from './color-rendered';\r\nimport Icon from './Icon';\r\nimport { setGradient } from '../utils';\r\n\r\nconst propTypes = {\r\n  gradient: PropTypes.shape({\r\n    colors: PropTypes.array,\r\n    deg: PropTypes.number\r\n  }),\r\n  isCopied: PropTypes.bool.isRequired,\r\n  onGenerateGradient: PropTypes.func.isRequired,\r\n  prevGradient: PropTypes.func.isRequired,\r\n  nextGradient: PropTypes.func.isRequired,\r\n  generateGradientIfNeeded: PropTypes.func.isRequired,\r\n  copyGradientToClipboard: PropTypes.func.isRequired,\r\n  addNewColor: PropTypes.func.isRequired,\r\n  editAngle: PropTypes.bool.isRequired,\r\n  switchEditAngle: PropTypes.func.isRequired,\r\n  changeGradientDirection: PropTypes.func.isRequired,\r\n  prefix: PropTypes.bool.isRequired,\r\n  fallback: PropTypes.bool.isRequired,\r\n  togglePrefix: PropTypes.func.isRequired,\r\n  toggleFallback: PropTypes.func.isRequired,\r\n  toggleEditColorOfGradient: PropTypes.func.isRequired,\r\n  editColorOfGradient: PropTypes.func.isRequired,\r\n  toggleSlider: PropTypes.func.isRequired,\r\n  startUpdateColorStop: PropTypes.func.isRequired,\r\n  updateColorStop: PropTypes.func.isRequired,\r\n  deleteSelectedColor: PropTypes.func.isRequired\r\n};\r\n\r\nconst Gradients = ({\r\n  gradient,\r\n  isCopied,\r\n  onGenerateGradient,\r\n  prevGradient,\r\n  nextGradient,\r\n  generateGradientIfNeeded,\r\n  copyGradientToClipboard,\r\n  addNewColor,\r\n  editAngle,\r\n  switchEditAngle,\r\n  changeGradientDirection,\r\n  prefix,\r\n  fallback,\r\n  togglePrefix,\r\n  toggleFallback,\r\n  toggleEditColorOfGradient,\r\n  editColorOfGradient,\r\n  toggleSlider,\r\n  startUpdateColorStop,\r\n  updateColorStop,\r\n  deleteSelectedColor\r\n}) => {\r\n  useEffect(() => {\r\n    generateGradientIfNeeded();\r\n  }, []);\r\n\r\n  if (!gradient) {\r\n    return null;\r\n  }\r\n\r\n  const { deg, showHub, showSlider, colors } = gradient;\r\n  const isDeleteColor = showHub && colors.length > 2;\r\n\r\n  return (\r\n    <div className=\"colors\">\r\n      <div className=\"inner\">\r\n        <Settings\r\n          togglePrefix={togglePrefix}\r\n          toggleFallback={toggleFallback}\r\n          prefix={prefix}\r\n          fallback={fallback}\r\n        />\r\n        <Background color={setGradient(gradient)}>\r\n          {!editAngle ? (\r\n            <Copy\r\n              copyToClipboard={copyGradientToClipboard}\r\n              isCopied={isCopied}\r\n            />\r\n          ) : (\r\n            <Circle\r\n              changeGradientDirection={changeGradientDirection}\r\n              switchEditAngle={switchEditAngle}\r\n              deg={deg}\r\n            />\r\n          )}\r\n        </Background>\r\n        <div className=\"colors__handle\">\r\n          <Button\r\n            onClick={switchEditAngle}\r\n            className={`colors__deg ${editAngle ? 'colors__deg--active' : ''}`}\r\n          >\r\n            <Icon>rotate_right</Icon>\r\n            {`${deg}°`}\r\n          </Button>\r\n          <ColorRendered\r\n            gradient={gradient}\r\n            toggleEditColorOfGradient={toggleEditColorOfGradient}\r\n            editColorOfGradient={editColorOfGradient}\r\n            startUpdateColorStop={startUpdateColorStop}\r\n            updateColorStop={updateColorStop}\r\n          />\r\n          <Button\r\n            onClick={!isDeleteColor ? addNewColor : deleteSelectedColor}\r\n            style={{ background: 'transparent', marginRight: '6px' }}\r\n            title={!isDeleteColor ? 'Add' : 'Delete'}\r\n          >\r\n            <Icon>\r\n              {!isDeleteColor ? 'add_circle_outline' : 'delete_outline'}\r\n            </Icon>\r\n          </Button>\r\n          <Button\r\n            onClick={toggleSlider}\r\n            style={{ background: 'transparent' }}\r\n            title={!showSlider ? 'Edit' : 'Exit'}\r\n          >\r\n            <Icon>{!showSlider ? 'wrap_text' : 'clear'}</Icon>\r\n          </Button>\r\n        </div>\r\n        <div className=\"colors__actions\">\r\n          <Button\r\n            onClick={onGenerateGradient}\r\n            className=\"colors__action colors__action--generate awesome-hover\"\r\n          >\r\n            <Icon className=\"icon\">refresh</Icon> Generate\r\n          </Button>\r\n          <Button\r\n            onClick={prevGradient}\r\n            className=\"colors__action awesome-hover\"\r\n          >\r\n            <Icon className=\"icon\">arrow_left</Icon> Back\r\n          </Button>\r\n          <Button\r\n            onClick={nextGradient}\r\n            className=\"colors__action awesome-hover\"\r\n          >\r\n            Next <Icon className=\"icon\">arrow_right</Icon>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nGradients.propTypes = propTypes;\r\nGradients.defaultProps = {};\r\n\r\nexport default Gradients;\r\n","E:\\Source Code\\my-app\\src\\components\\button.js",[],"E:\\Source Code\\my-app\\src\\components\\background.js",[],"E:\\Source Code\\my-app\\src\\components\\copy.js",[],"E:\\Source Code\\my-app\\src\\components\\settings.js",[],"E:\\Source Code\\my-app\\src\\components\\Icon.js",[],"E:\\Source Code\\my-app\\src\\components\\color-rendered.js",["474","475","476"],"import React, { useMemo, useEffect, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from './button';\r\nimport ColorPicker from './color-picker';\r\nimport { offset, preventClick } from '../utils';\r\n\r\nconst propTypes = {\r\n  gradient: PropTypes.object,\r\n  toggleEditColorOfGradient: PropTypes.func.isRequired,\r\n  startUpdateColorStop: PropTypes.func.isRequired,\r\n  updateColorStop: PropTypes.func.isRequired,\r\n  editColorOfGradient: PropTypes.func.isRequired\r\n};\r\n\r\nconst ColorRendered = ({\r\n  gradient,\r\n  toggleEditColorOfGradient,\r\n  startUpdateColorStop,\r\n  updateColorStop,\r\n  editColorOfGradient\r\n}) => {\r\n  const slider = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (!showSlider) {\r\n      window.removeEventListener('mousemove', onMouseMove);\r\n      window.removeEventListener('mouseup', onMouseUp);\r\n    }\r\n\r\n    return () => {\r\n      window.removeEventListener('mousemove', onMouseMove);\r\n      window.removeEventListener('mouseup', onMouseUp);\r\n    };\r\n  }, [showSlider]);\r\n\r\n  const onMouseDown = index => () => {\r\n    const { showSlider } = gradient;\r\n    if (showSlider) {\r\n      startUpdateColorStop(index);\r\n      window.addEventListener('mouseup', onMouseUp);\r\n      window.addEventListener('mousemove', onMouseMove);\r\n    }\r\n  };\r\n\r\n  const onMouseMove = e => {\r\n    const { clientX } = e;\r\n    const { current } = slider;\r\n    const diff = clientX - offset(current, 'left');\r\n    const percent = Math.min(Math.max(diff / current.offsetWidth, 0), 1);\r\n    updateColorStop(Math.floor(percent * 100));\r\n  };\r\n\r\n  const onMouseUp = () => {\r\n    window.removeEventListener('mousemove', onMouseMove);\r\n    window.removeEventListener('mouseup', onMouseUp);\r\n  };\r\n\r\n  const renderColor = useMemo(() => {\r\n    const { colors, colorIndexEditing, showSlider, showHub } = gradient;\r\n    return colors.map(({ color, stop }, index, { length }) => {\r\n      const active =\r\n        colorIndexEditing === index && showHub ? 'button--active' : '';\r\n      const leftStop = showSlider ? stop : Math.floor((index * 100) / length);\r\n\r\n      return (\r\n        <div\r\n          className=\"color-rendered__color-wrapper\"\r\n          key={index}\r\n          style={{\r\n            top: 0,\r\n            left: `${leftStop}%`,\r\n            zIndex: colorIndexEditing === index ? 2 : 1\r\n          }}\r\n        >\r\n          <Button\r\n            className={`color-rendered__color ${active}`}\r\n            style={{ background: color }}\r\n            title={color}\r\n            onMouseDown={onMouseDown(index)}\r\n            onClick={\r\n              showSlider\r\n                ? preventClick\r\n                : toggleEditColorOfGradient.bind(this, index)\r\n            }\r\n          />\r\n          <ColorPicker\r\n            visible={!!active}\r\n            color={color}\r\n            editColorOfGradient={editColorOfGradient}\r\n          />\r\n        </div>\r\n      );\r\n    });\r\n  }, [gradient]);\r\n\r\n  if (!gradient) {\r\n    return null;\r\n  }\r\n\r\n  const { colors, showSlider } = gradient;\r\n  const sliderWidth = showSlider ? 100 : colors.length * 25;\r\n  const unit = showSlider ? '%' : 'px';\r\n  const opacity = showSlider ? 1 : 0;\r\n\r\n  return (\r\n    <div className=\"color-rendered\" ref={slider}>\r\n      <div\r\n        style={{ width: `${sliderWidth}${unit}` }}\r\n        className=\"color-rendered__slider\"\r\n      >\r\n        <div style={{ opacity }} className=\"color-rendered__fill\"></div>\r\n        {renderColor}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nColorRendered.propTypes = propTypes;\r\nColorRendered.defaultProps = { gradient: null };\r\n\r\nexport default React.memo(ColorRendered);\r\n","E:\\Source Code\\my-app\\src\\components\\circle.js",["477","478"],"import React, { useRef, useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { offset } from '../utils';\r\n\r\nconst propTypes = {\r\n  deg: PropTypes.number.isRequired,\r\n  changeGradientDirection: PropTypes.func.isRequired,\r\n  switchEditAngle: PropTypes.func.isRequired\r\n};\r\n\r\nconst Circle = ({ deg, changeGradientDirection, switchEditAngle }) => {\r\n  const [centerCircleX, setCenterCircleX] = useState(0);\r\n  const [centerCircleY, setCenterCircleY] = useState(0);\r\n  const handleRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const { current } = handleRef;\r\n    setCenterCircleX(offset(current, 'left'));\r\n    setCenterCircleY(offset(current, 'top'));\r\n\r\n    return () => {\r\n      handleRef.current.offsetParent.removeEventListener(\r\n        'mousemove',\r\n        onMouseMove\r\n      );\r\n    };\r\n  }, []);\r\n\r\n  //P1: center circle coords\r\n  //P2: mouse coords\r\n  // angle in radians: Math.atan2(p2.y - p1.y, p2.x - p1.x);\r\n  // angle in degrees: Math.atan2(p2.y - p1.y, p2.x - p1.x) * 180 / Math.PI;\r\n  const onMouseMove = e => {\r\n    const { clientX, clientY } = e;\r\n    const diffX = clientX - centerCircleX;\r\n    const diffY = clientY - centerCircleY;\r\n    let angle = Math.floor((Math.atan2(diffY, diffX) * 180) / Math.PI);\r\n    angle = angle < 0 ? 360 + angle : angle;\r\n    changeGradientDirection(angle);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      onMouseMove={onMouseMove}\r\n      onMouseUp={switchEditAngle}\r\n      className=\"circle\"\r\n    >\r\n      <div className=\"circle__cover\"></div>\r\n      <div\r\n        ref={handleRef}\r\n        style={{ transform: `rotate(${deg}deg)` }}\r\n        className=\"circle__handle\"\r\n      ></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nCircle.propTypes = propTypes;\r\n\r\nexport default React.memo(Circle);\r\n","E:\\Source Code\\my-app\\src\\components\\color-picker.js",[],"E:\\Source Code\\my-app\\src\\views\\NotFound.js",[],"E:\\Source Code\\my-app\\src\\views\\Menu.js",["479","480","481","482"],"import React, { Component } from \"react\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Route,\r\n    NavLink,\r\n} from \"react-router-dom\";\r\nimport { \r\n    BsFillBarChartFill,\r\n    BsFillPieChartFill  \r\n} from \"react-icons/bs\";\r\n\r\nconst menus = [\r\n    {\r\n        name: \"Home\",\r\n        to: \"/\",\r\n        exact: true\r\n    },\r\n    {\r\n        name: \"Display\",\r\n        to: \"/display\",\r\n        exact: false\r\n    },\r\n    {\r\n        name: \"List\",\r\n        to: \"/todolist\",\r\n        exact: false\r\n    },\r\n    {\r\n        name: \"Manage\",\r\n        to: \"/usermanager\",\r\n        exact: false\r\n    },\r\n    {\r\n        name: \"Transcript\",\r\n        to: \"/transcript\",\r\n        exact: false\r\n    },\r\n    {\r\n        name: \"Statistical\",\r\n        to: \"/statistical\",\r\n        exact: false\r\n    },\r\n    {\r\n        name: \"Color\",\r\n        to: \"/color\",\r\n        exact: false\r\n    },\r\n    {\r\n        name: \"Covid 19\",\r\n        to: \"/covid19\",\r\n        exact: false\r\n    },\r\n    {\r\n        name: \"World Cup\",\r\n        to: \"/worldcup\",\r\n        exact: false\r\n    },\r\n    {\r\n        name: \"Blockchain\",\r\n        to: \"/blockchain\",\r\n        exact: false\r\n    }\r\n]\r\n\r\nconst MenuLink = ({ label, to, activeOnlyWhenExact }) => {\r\n    return (\r\n      <Route \r\n            path={to} \r\n            exact = {activeOnlyWhenExact} \r\n            children={(match) => {\r\n            const active = match ? \"item-active\" : \"\";\r\n            return (\r\n                <li>\r\n                    <NavLink \r\n                        to={to} \r\n                        className=\"navlink\"\r\n                        activeClassName={`${active}`}\r\n                        exact\r\n                        data-toggle=\"navlink\"\r\n                        >\r\n                        {label}\r\n                        <span className={(label===\"Statistical\") ? \"caret\" : \"\"}>\r\n                        </span>\r\n                        {(label===\"Statistical\")\r\n                        ?\r\n                        (<ul className=\"sub-menu\">\r\n                            <li>\r\n                                <a \r\n                                    href=\"#\"\r\n                                    className=\"text-color-dropdown\">\r\n                                Line Chart\r\n                                </a>\r\n                            </li>\r\n                            <li>\r\n                                <a\r\n                                    href=\"#\"\r\n                                    className=\"text-color-dropdown\">\r\n                                Column <BsFillBarChartFill />\r\n                                </a>\r\n                            </li>\r\n                            <li>\r\n                                <a \r\n                                    href=\"#\"\r\n                                    className=\"text-color-dropdown\">\r\n                                Pie <BsFillPieChartFill />\r\n                                </a>\r\n                            </li>\r\n                        </ul>)\r\n                        :\r\n                        (<></>)}\r\n                    </NavLink>\r\n                </li>\r\n            )}}/>)\r\n};\r\n\r\nclass Menu extends Component {\r\n\r\n    showMenus = (menus) => {\r\n        let result = null;\r\n        if(menus.length > 0) {\r\n            result = menus.map((menu, index) => {\r\n                return (\r\n                    <MenuLink \r\n                        key={index} \r\n                        label={menu.name} \r\n                        to={menu.to} \r\n                        activeWhenOnlyExact={menu.exact} \r\n                    />)\r\n            })\r\n        }\r\n        return result;\r\n    }\r\n\r\n    render()\r\n    {\r\n        return(\r\n            <nav id=\"menu\" className=\"fixed-top\">\r\n            <ul>\r\n              {/* <li>\r\n              <NavLink\r\n                className=\"navlink\"\r\n                // id=\"home-tab\"\r\n                // data-toggle=\"tab1\"\r\n                activeClassName=\"item-active\"\r\n                exact\r\n                to=\"/\">\r\n                Home\r\n              </NavLink>\r\n              </li>\r\n              <li>\r\n              <NavLink\r\n                className=\"navlink\"\r\n                // id=\"display-tab\"\r\n                // data-toggle=\"tab2\"\r\n\t\t\t\t        activeClassName=\"item-active\"\r\n                to=\"/display\">\r\n                Display\r\n              </NavLink>\r\n              </li>\r\n              <li><NavLink\r\n                className=\"navlink\"\r\n                // id=\"todo-tab\"\r\n                // data-toggle=\"tab3\"\r\n                activeClassName=\"item-active\"\r\n                to=\"/todolist\">\r\n                List\r\n              </NavLink></li>\r\n              <li><NavLink\r\n                className=\"navlink\"\r\n                // id=\"manage-tab\"\r\n                // data-toggle=\"tab4\"\r\n                activeClassName=\"item-active\"\r\n                to=\"/usermanager\">\r\n                Manage\r\n              </NavLink>\r\n              </li>\r\n              <li>\r\n              <NavLink\r\n                className=\"navlink\"\r\n                // id=\"table-tab\"\r\n                // data-toggle=\"tab5\"\r\n                activeClassName=\"item-active\"\r\n                to=\"/table\">\r\n                Table\r\n              </NavLink>\r\n              </li>\r\n            \r\n              <li>\r\n              <NavLink\r\n                className=\"navlink\"\r\n                // id=\"table-tab\"\r\n                // data-toggle=\"tab5\"\r\n                activeClassName=\"item-active\"\r\n                to=\"/chart\">\r\n                Chart\r\n              </NavLink>\r\n              </li>\r\n              <li>\r\n              <NavLink\r\n                className=\"navlink\"\r\n                // id=\"table-tab\"\r\n                // data-toggle=\"tab5\"\r\n                activeClassName=\"item-active\"\r\n                to=\"/color\">\r\n                Color\r\n              </NavLink>\r\n              </li>\r\n              <li>\r\n              <NavLink\r\n                className=\"navlink\"\r\n                // id=\"table-tab\"\r\n                // data-toggle=\"tab5\"\r\n                activeClassName=\"item-active\"\r\n                to=\"/covid19\">\r\n                Covid 19\r\n              </NavLink>\r\n              </li>\r\n              <li>\r\n              <NavLink\r\n                className=\"navlink\"\r\n                // id=\"table-tab\"\r\n                // data-toggle=\"tab5\"\r\n                activeClassName=\"item-active\"\r\n                to=\"/worldcup\">\r\n                World Cup\r\n              </NavLink>\r\n              </li>\r\n              <li>\r\n              <NavLink\r\n                className=\"navlink\"\r\n                // id=\"table-tab\"\r\n                // data-toggle=\"tab5\"\r\n                activeClassName=\"item-active\"\r\n                to=\"/blockchain\">\r\n                Blockchain\r\n              </NavLink>\r\n              </li>\r\n              <li>\r\n              <input \r\n                id=\"cell\" \r\n                placeholder=\"Search...\"\r\n              />\r\n              </li> */}\r\n              {/* <MenuLink label=\"Home\" to=\"/\" activeWhenOnlyExact={true} />\r\n              <MenuLink label=\"Display\" to=\"/display\" activeWhenOnlyExact={false} />\r\n              <MenuLink label=\"List\" to=\"/list\" activeWhenOnlyExact={false} />  \r\n              <MenuLink label=\"Manage\" to=\"/manage\" activeWhenOnlyExact={false} />  \r\n              <MenuLink label=\"Table\" to=\"/table\" activeWhenOnlyExact={false} />  \r\n              <MenuLink label=\"Chart\" to=\"/chart\" activeWhenOnlyExact={false} />  \r\n              <MenuLink label=\"Color\" to=\"/color\" activeWhenOnlyExact={false} />  \r\n              <MenuLink label=\"Covid 19\" to=\"/covid19\" activeWhenOnlyExact={false} />  \r\n              <MenuLink label=\"World cup\" to=\"/worldcup\" activeWhenOnlyExact={false} />  \r\n              <MenuLink label=\"Blockchain\" to=\"/blockchain\" activeWhenOnlyExact={false} /> */}\r\n              {this.showMenus(menus)}\r\n              <input \r\n                id=\"cell\" \r\n                placeholder=\"Search...\"\r\n              />\r\n            </ul>\r\n          </nav>\r\n        //   {/* <nav>\r\n        //   <ul>\r\n        //     <li>\r\n        //       <NavLink\r\n        //         className=\"navlink\"\r\n        //         // id=\"home-tab\"\r\n        //         // data-toggle=\"tab1\"\r\n        //         to=\"/\">\r\n        //         Home\r\n        //       </NavLink>\r\n        //     </li>\r\n        //     <li>\r\n        //       <NavLink\r\n        //         className=\"navlink\"\r\n        //         // id=\"display-tab\"\r\n        //         // data-toggle=\"tab2\"\r\n        //         to=\"/display\">\r\n        //         Display\r\n        //       </NavLink>\r\n        //     </li>\r\n        //     <li>\r\n        //       <NavLink\r\n        //         className=\"navlink\"\r\n        //         // id=\"todo-tab\"\r\n        //         // data-toggle=\"tab3\"\r\n        //         to=\"/todolist\">\r\n        //         To do\r\n        //       </NavLink>\r\n        //     </li>\r\n        //     <li>\r\n        //       <NavLink\r\n        //         className=\"navlink\"\r\n        //         // id=\"manage-tab\"\r\n        //         // data-toggle=\"tab4\"\r\n        //         to=\"/usermanager\">\r\n        //         User Manager\r\n        //       </NavLink>\r\n        //     </li>\r\n        //     <li>\r\n        //       <NavLink\r\n        //         className=\"navlink\"\r\n        //         // id=\"table-tab\"\r\n        //         // data-toggle=\"tab5\"\r\n        //         to=\"/table\">\r\n        //         Table\r\n        //       </NavLink>\r\n        //     </li>\r\n        //   </ul>\r\n        //   </nav> */}\r\n        );\r\n    }\r\n}\r\n\r\nexport default Menu;","E:\\Source Code\\my-app\\src\\views\\routes.js",[],["483","484"],"E:\\Source Code\\my-app\\src\\reducers\\DataMembers.js",[],"E:\\Source Code\\my-app\\src\\views\\TranscriptCalculate.js",[],"E:\\Source Code\\my-app\\src\\reducers\\TranscriptReducer.js",["485"],"import * as types from \"../constants/ActionTypes\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst newRow = [{\r\n    generateId: uuidv4(),\r\n    semester: \"\",\r\n    courseId: \"\",\r\n    courseTitle: \"\",\r\n    credits: \"\",\r\n    process: \"\",\r\n    examination: \"\",\r\n    factor: \"\",\r\n    action: \"\",\r\n    point: \"\",\r\n    grade: \"\",\r\n    status: \"\",\r\n}];\r\n\r\nconst initialState = {\r\n    handleState: [],\r\n    currentState: newRow ? newRow : [],\r\n    isEditting: false\r\n}\r\n\r\nfunction roundToOne(process, examination, factor, precision) {\r\n    const average = process*factor+examination*(1-factor);\r\n    const multiplier = Math.pow(10, precision || 0);\r\n    return Math.round(average * multiplier) / multiplier;\r\n}\r\n\r\nconst listOfCourse = [{\r\n    courseId: \"1a\",\r\n    grade: 4,\r\n    credits: 3\r\n},\r\n{\r\n    courseId: \"2s\",\r\n    grade: 2.5,\r\n    credits: 2\r\n},\r\n{\r\n    courseId: \"3f\",\r\n    grade: 1.5,\r\n    credits: 4\r\n},\r\n{\r\n    courseId: \"4j\",\r\n    grade: 2,\r\n    credits: 2\r\n},\r\n{\r\n    courseId: \"5q\",\r\n    grade: 3,\r\n    credits: 3\r\n}\r\n];\r\n\r\n\r\nconst GPA = listOfCourse.reduce((accumulator, currentValue) => {\r\n    return accumulator + currentValue.credits*currentValue.grade;\r\n}, 0);\r\n\r\n// console.log(\"GPA\", GPA);\r\n\r\nconst TranscriptReducer = (state = initialState, action) => {\r\n    const { \r\n        process, \r\n        factor, \r\n        examination, \r\n        grade,\r\n        semester,\r\n        courseId,\r\n        courseTitle,\r\n        credits,\r\n        generateId\r\n     } = action;\r\n    switch(action.type) {\r\n        case types.CURRENT_ROW:\r\n            return {...state};\r\n        case types.ADD_NEW_ROW:\r\n            return {\r\n                ...state,\r\n                currentState:  [\r\n                    ...state.currentState,\r\n                    {\r\n                        generateId: uuidv4(),\r\n                        semester: \"\",\r\n                        courseId: \"\",\r\n                        courseTitle: \"\",\r\n                        credits: \"\",\r\n                        process: \"\",\r\n                        examination: \"\",\r\n                        factor: \"\",\r\n                        action: \"\",\r\n                        point: \"\",\r\n                        grade: \"\",\r\n                        status: \"\",\r\n                    }\r\n                ]\r\n            };\r\n        case types.EDIT_THIS_COURSE:\r\n            return { \r\n                ...state,\r\n                isEditting: true\r\n             }\r\n        case types.DELETE_ROW:\r\n            return {\r\n                ...state,\r\n                handleState: state.handleState.filter(item => item.generateId !== action.id),\r\n                currentState: state.currentState.filter(item => item.generateId !== action.id)\r\n            }\r\n        case types.SAVE_ROW:\r\n            console.log(\"generateId\", generateId);\r\n            const newList = {\r\n                generateId: generateId,\r\n                semester: semester,\r\n                courseId: courseId,\r\n                courseTitle: courseTitle,\r\n                credits: credits,\r\n                point: roundToOne(process, examination, factor, 1),\r\n                grade: grade,\r\n                process: process,\r\n                examination: examination,\r\n                factor: factor,\r\n                status: \"Pending\"\r\n            }\r\n            const currentStateAfterSave = state.currentState.filter(item=>item.generateId !== action.id);\r\n            return {\r\n                ...state,\r\n                currentState: [...currentStateAfterSave],\r\n                handleState: [...state.handleState, newList]\r\n            }\r\n        default:\r\n            return {...state}; \r\n    }\r\n};\r\n\r\n\r\nexport default TranscriptReducer;",["486","487"],"E:\\Source Code\\my-app\\src\\components\\TranscriptCalculate\\CurrentView.js",["488","489"],"import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as action from './../../actions/index';\r\n\r\nfunction CurrentView(props) {\r\n  const {\r\n    status,\r\n    deleteRow,\r\n    generateId,\r\n    examination,\r\n    process,\r\n    saveRowById,\r\n    semeter,\r\n    courseId,\r\n    courseTitle,\r\n    credits,\r\n    factor,\r\n    handleState\r\n  } = props;\r\n\r\n  const [newSemester, setNewSemester] = useState(semeter);\r\n  const [newCourseId, setNewCourseId] = useState(courseId);\r\n  const [newCourseTitle, setNewCourseTitle] = useState(courseTitle);\r\n  const [newCredits, setNewCredits] = useState(credits);\r\n  const [newProcess, setNewProcess] = useState(process);\r\n  const [newExamination, setNewExamination] = useState(examination);\r\n  const [newFactor, setNewFactor] = useState(factor);\r\n\r\n  const handleChangeSemester = e => {\r\n    const { value } = e.target;\r\n    setNewSemester(value);\r\n  };\r\n\r\n  const handleChangeCourseId = e => {\r\n    const { value } = e.target;\r\n    setNewCourseId(value);\r\n  };\r\n\r\n  const handleChangeCourseTitle = e => {\r\n    const { value } = e.target;\r\n    setNewCourseTitle(value);\r\n  };\r\n\r\n  const handleChangeCredits = e => {\r\n    const { value } = e.target;\r\n    setNewCredits(value);\r\n  };\r\n\r\n  const handleChangeProcess = e => {\r\n    const { value } = e.target;\r\n    setNewProcess(value);\r\n  };\r\n\r\n  const handleChangeExamination = e => {\r\n    const { value } = e.target;\r\n    setNewExamination(value);\r\n  };\r\n\r\n  const handleChangeFactor = e => {\r\n    const { value } = e.target;\r\n    setNewFactor(value);\r\n  };\r\n\r\n  const newCourse = [\r\n    generateId,\r\n    newSemester,\r\n    newCourseId,\r\n    newCourseTitle,\r\n    newCredits,\r\n    newProcess,\r\n    newExamination,\r\n    newFactor\r\n  ];\r\n\r\n  function saveData() {\r\n    saveRowById(...newCourse);\r\n  }\r\n\r\n  // useEffect(() => {\r\n  //   saveRow(generateId, newFactor, newProcess, newExamination)\r\n  // }, [newFactor, newProcess, newExamination])\r\n\r\n  return (\r\n    <tr>\r\n      <td className=\"format-input-cell\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"border-input\"\r\n          size=\"5\"\r\n          maxlength=\"5\"\r\n          onChange={handleChangeSemester}\r\n          value={123}\r\n        />\r\n      </td>\r\n      <td className=\"format-input-cell\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"border-input\"\r\n          size=\"7\"\r\n          maxlength=\"7\"\r\n          onChange={handleChangeCourseId}\r\n        />\r\n      </td>\r\n      <td className=\"format-input-cell\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"border-input\"\r\n          size=\"46\"\r\n          maxlength=\"46\"\r\n          onChange={handleChangeCourseTitle}\r\n        />\r\n      </td>\r\n      <td className=\"format-input-cell\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"border-input\"\r\n          size=\"2\"\r\n          maxlength=\"2\"\r\n          onChange={handleChangeCredits}\r\n        />\r\n      </td>\r\n      <td className=\"format-input-cell\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"border-input\"\r\n          size=\"3\"\r\n          maxlength=\"3\"\r\n          onChange={handleChangeProcess}\r\n        />\r\n      </td>\r\n      <td>\r\n        <input\r\n          type=\"text\"\r\n          className=\"border-input\"\r\n          size=\"3\"\r\n          maxlength=\"3\"\r\n          onChange={handleChangeExamination}\r\n        />\r\n        {/* <select \r\n        className=\"form-control\" \r\n        defaultValue={factor} \r\n        // onChange={handleSelectOption}\r\n        >\r\n        <option value=\"user\">0.5</option>\r\n        <option value=\"manager\">0.3</option>\r\n        <option value=\"custormer\">0.4</option>\r\n        </select> */}\r\n      </td>\r\n      <td>\r\n        <input\r\n          type=\"text\"\r\n          className=\"border-input\"\r\n          size=\"3\"\r\n          maxlength=\"3\"\r\n          onChange={handleChangeFactor}\r\n        />\r\n      </td>\r\n      <td>\r\n        <center>\r\n          {/* {actionsArray.map((item)=>(<button \r\n        className={`btn btn-${item.buttonType}`}\r\n        onClick={item.handleEvent}\r\n        >{item.name}\r\n        </button>))} */}\r\n          {/* &nbsp;&nbsp;&nbsp;&nbsp; */}\r\n          <button \r\n            className=\"btn btn-success\" \r\n            onClick={saveData}>\r\n            Save\r\n          </button>\r\n          &nbsp;&nbsp;&nbsp;\r\n          <button\r\n            className=\"btn btn-danger\"\r\n            onClick={() => deleteRow(generateId)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </center>\r\n      </td>\r\n      <td></td>\r\n      <td></td>\r\n      <td className=\"text-center\">\r\n        <span\r\n          className={\r\n            status === 'Pending'\r\n              ? 'label label-success'\r\n              : status === 'Error'\r\n              ? 'label label-danger'\r\n              : null\r\n          }\r\n        >\r\n          {status}\r\n        </span>\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    handleState: state.TranscriptReducer.handleState,\r\n    currentState: state.TranscriptReducer.currentState\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n  return {\r\n    addNewRow: value => {\r\n      dispatch(action.addNewRow(value));\r\n    },\r\n    deleteRow: id => {\r\n      dispatch(action.deleteRow(id));\r\n    },\r\n    saveRowById: (\r\n      id,\r\n      semester,\r\n      courseId,\r\n      courseTitle,\r\n      credits,\r\n      process,\r\n      examination,\r\n      factor\r\n    ) => {\r\n      dispatch(\r\n        action.saveRow(\r\n          id,\r\n          semester,\r\n          courseId,\r\n          courseTitle,\r\n          credits,\r\n          process,\r\n          examination,\r\n          factor\r\n        )\r\n      );\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CurrentView);\r\n",["490","491"],"E:\\Source Code\\my-app\\src\\components\\TranscriptCalculate\\UpdateView.js",[],"E:\\Source Code\\my-app\\src\\chart\\lineChart.jsx",["492"],"import React, { useEffect, useRef } from \"react\";\r\nimport {\r\n  select,\r\n  scaleLinear,\r\n  scaleBand,\r\n  axisLeft,\r\n  max,\r\n  axisBottom,\r\n  line\r\n  // extent,\r\n} from \"d3\";\r\nimport { data } from \"./data/dataLineChart\";\r\n\r\nconst margin = {\r\n  top: 40,\r\n  bottom: 20,\r\n  left: 50,\r\n  right: 40,\r\n};\r\n\r\nconst canvasHeight = 400;\r\nconst canvasWidth = 900;\r\n\r\nfunction LineChart() {\r\n  const svgRef = useRef();\r\n\r\n  function drawBarChar(svgCanvas) {\r\n    const xScale = scaleBand()\r\n      .domain(data.map((d) => d.stock))\r\n      .range([0, canvasWidth - margin.left - margin.right]);\r\n\r\n    const yScale = scaleLinear()\r\n      .domain([0, max(data, (d) => d.sale)])\r\n      .range([canvasHeight - margin.top - margin.bottom, 0]);\r\n\r\n    const g = svgCanvas\r\n      .append(\"g\")\r\n      .attr(\"transform\", `translate(${margin.left}, ${margin.top})`);\r\n\r\n    g.append(\"g\")\r\n      .call(axisBottom(xScale))\r\n      .attr(\r\n        \"transform\",\r\n        `translate(0, ${canvasHeight - margin.top - margin.bottom})`\r\n      );\r\n\r\n    g.append(\"g\").call(axisLeft(yScale));\r\n    g.append(\"text\").attr(\"y\", -10).text(\"Line Chart\");\r\n\r\n    g.append(\"path\")\r\n      .datum(data)\r\n      .attr(\"transform\", `translate(45, 0)`)\r\n      .attr(\"fill\", \"none\")\r\n      .transition()\r\n      .duration(500)\r\n      .attr(\"stroke\", \"#1F568B\")\r\n      .attr(\"stroke-width\", 1.5)\r\n      .attr(\r\n        \"d\",\r\n        line()\r\n          .x((d) => xScale(d.stock))\r\n          .y((d) => yScale(d.sale))\r\n      );\r\n  }\r\n\r\n  useEffect(() => {\r\n    // draw canvas\r\n    const svgCanvas = select(svgRef.current)\r\n      .append(\"svg\")\r\n      .attr(\"width\", canvasWidth)\r\n      .attr(\"height\", canvasHeight)\r\n      .attr(\"margin\", 10)\r\n      .style(\"border\", \"1px solid black\");\r\n\r\n    drawBarChar(svgCanvas);\r\n    return () => {\r\n      // remove canvas\r\n      svgCanvas.remove();\r\n    };\r\n  }, [data]);\r\n\r\n  return (\r\n    <div className=\"flex-container\">\r\n      <div\r\n        ref={svgRef}\r\n        style={{\r\n          marginLeft: 10,\r\n          marginTop: 10,\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n        }}\r\n        className=\"flex-item\"\r\n      ></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LineChart;\r\n","E:\\Source Code\\my-app\\src\\chart\\basicChart.jsx",["493"],"import React, { useEffect, useRef, useState, useCallback } from \"react\";\r\nimport { select, scaleLinear, max, scaleBand, axisLeft, axisBottom } from \"d3\";\r\n// import { data } from \"./data/dataBasicChart\";\r\n\r\nfunction BasicChart() {\r\n  const svgRef = useRef();\r\n  const [data, setData] = useState([\r\n    {\r\n      stock: \"stock1\",\r\n      sale: 1000,\r\n    },\r\n    {\r\n      stock: \"stock2\",\r\n      sale: 2000,\r\n    },\r\n    {\r\n      stock: \"stock3\",\r\n      sale: 300,\r\n    },\r\n    {\r\n      stock: \"stock4\",\r\n      sale: 1283,\r\n    },\r\n    {\r\n      stock: \"stock5\",\r\n      sale: 429,\r\n    },\r\n    {\r\n      stock: \"stock6\",\r\n      sale: 120,\r\n    },\r\n    {\r\n      stock: \"stock7\",\r\n      sale: 630,\r\n    },\r\n    {\r\n      stock: \"stock8\",\r\n      sale: 9041,\r\n    },\r\n    {\r\n      stock: \"stock9\",\r\n      sale: 1280,\r\n    },\r\n  ]);\r\n\r\n  const canvasHeight = 400;\r\n  const canvasWidth = 900;\r\n  const margin = {\r\n    top: 40,\r\n    bottom: 20,\r\n    left: 50,\r\n    right: 40,\r\n  };\r\n\r\n  const drawBarChar = useCallback(\r\n    (svgCanvas) => {\r\n      const xScale = scaleLinear()\r\n        .domain([0, max(data, (d) => d.sale)])\r\n        .range([0, canvasWidth - margin.left - margin.right]);\r\n\r\n      const yScale = scaleBand()\r\n        .domain(data.map((d) => d.stock))\r\n        .range([0, canvasHeight - margin.top - margin.bottom])\r\n        .padding(0.1);\r\n\r\n      const g = svgCanvas\r\n        .append(\"g\")\r\n        .attr(\"transform\", `translate(${margin.left}, ${margin.top})`);\r\n\r\n      g.append(\"g\").call(axisLeft(yScale));\r\n      g.append(\"g\")\r\n        .call(\r\n          axisBottom(xScale).tickSize(\r\n            -(canvasHeight - margin.top - margin.bottom)\r\n          )\r\n        )\r\n        .attr(\r\n          \"transform\",\r\n          `translate(0, ${canvasHeight - margin.top - margin.bottom})`\r\n        );\r\n\r\n      g.selectAll(\"rect\")\r\n        .append(\"rect\")\r\n        .data(data)\r\n        .join(\"rect\")\r\n        .attr(\"fill\", \"#1F568B\")\r\n        .attr(\"y\", (d) => yScale(d.stock))\r\n        .attr(\"height\", yScale.bandwidth());\r\n\r\n      g.selectAll(\"rect\")\r\n        .transition()\r\n        .duration(500)\r\n        .attr(\"width\", (d, i) => xScale(d.sale));\r\n\r\n      g.append(\"text\").attr(\"y\", -10).text(\"Basic chart\");\r\n    },\r\n    [data, margin]\r\n  );\r\n\r\n  useEffect(() => {\r\n    // draw canvas\r\n    const svgCanvas = select(svgRef.current)\r\n      .append(\"svg\")\r\n      .attr(\"width\", canvasWidth)\r\n      .attr(\"height\", canvasHeight)\r\n      .attr(\"margin\", 10)\r\n      .style(\"border\", \"1px solid black\");\r\n\r\n    drawBarChar(svgCanvas);\r\n    return () => {\r\n      // remove canvas\r\n      svgCanvas.remove();\r\n    };\r\n  }, [drawBarChar]);\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        ref={svgRef}\r\n        style={{\r\n          marginLeft: 10,\r\n          marginTop: 10,\r\n        }}\r\n      ></div>\r\n      <button\r\n        onClick={() =>\r\n          setData(\r\n            data.map((d) => {\r\n              return {\r\n                stock: d.stock,\r\n                sale: d.sale + 500,\r\n              };\r\n            })\r\n          )\r\n        }\r\n      >\r\n        Increase data for basic chart\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BasicChart;\r\n","E:\\Source Code\\my-app\\src\\chart\\raceChart.jsx",["494","495"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport { select } from 'd3'\r\n\r\nfunction RaceChart() {\r\n  const svgRef = useRef()\r\n  const [scale, setScale] = useState(1)\r\n  const [data, setData] = useState([3, 3, 5, 10, 12, 100])\r\n  const canvasHeight = 400\r\n  const canvasWidth = 900\r\n\r\n  function drawBarChar(svgCanvas) {\r\n    svgCanvas.selectAll('rect')\r\n      .data(data).enter()\r\n      .append('rect')\r\n      .attr('width', 40)\r\n      .attr('height', (dataPoint) => dataPoint * scale)\r\n      .attr('fill', '#8C1515')\r\n      .attr('x', (dataPoint, iteration) => iteration * 45)\r\n      .attr('y', (dataPoint) => canvasHeight - dataPoint * scale)\r\n\r\n    svgCanvas.selectAll('text')\r\n      .data(data).enter()\r\n      .append('text')\r\n      .attr('x', (dataPoint, i) => i * 45 + 10)\r\n      .attr('y', (dataPoint, i) => canvasHeight - dataPoint * scale - 10)\r\n      .text(dataPoint => dataPoint)\r\n  }\r\n\r\n  useEffect(() => {\r\n    // draw canvas\r\n    const svgCanvas = select(svgRef.current)\r\n      .append('svg')\r\n      .attr('width', canvasWidth)\r\n      .attr('height', canvasHeight)\r\n      .attr('margin', 10)\r\n      .style('border', '1px solid black')\r\n\r\n    drawBarChar(svgCanvas)\r\n    return () => {\r\n      // remove canvas\r\n      svgCanvas.remove()\r\n    }\r\n  }, [scale, data])\r\n\r\n  return (\r\n    <span>\r\n      <div className=\"flex-container\">\r\n        <div \r\n          ref={svgRef} \r\n          style={{\r\n          marginLeft: 10,\r\n          marginTop: 10,\r\n          display: 'flex',\r\n          flexDirection: 'column'\r\n        }}\r\n          className=\"flex-item\"\r\n        >\r\n      </div>\r\n    </div>\r\n      <button onClick={() => setScale(scale + 1)}>\r\n        Change scale\r\n      </button>\r\n    </span>\r\n  );\r\n}\r\n\r\nexport default RaceChart;\r\n","E:\\Source Code\\my-app\\src\\chart\\donutChart.jsx",["496","497","498","499","500","501","502","503"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport {\r\n  select,\r\n  scaleLinear,\r\n  scaleBand,\r\n  axisLeft,\r\n  max,\r\n  axisBottom,\r\n  pie,\r\n  arc,\r\n  scaleOrdinal\r\n} from 'd3';\r\nimport { dataBrandComputer, dataBrandClothing } from './data/dataDonutChart';\r\n\r\nconst margin = {\r\n  top: 20,\r\n  bottom: 20,\r\n  left: 50,\r\n  right: 20\r\n};\r\n\r\nconst canvasHeight = 500;\r\nconst canvasWidth = 900;\r\nconst height = 360;\r\nconst width = 360;\r\nconst radius = Math.min(width, height) / 2;\r\nconst donutWidth = 75;\r\n\r\nfunction DonutChart() {\r\n  const svgRef = useRef();\r\n\r\n  function drawBarChar(svgCanvas) {\r\n    const color = scaleOrdinal().range([\r\n      '#5A39AC',\r\n      '#DD98D6',\r\n      '#E7C820',\r\n      '#08B2B2'\r\n    ]);\r\n    const arcl = arc()\r\n      .innerRadius(radius - donutWidth)\r\n      .outerRadius(radius);\r\n    const piece = pie().value(d => d.value);\r\n\r\n    const path = svgCanvas\r\n      .selectAll('path')\r\n      .data(piece(dataBrandComputer))\r\n      .enter()\r\n      .append('path')\r\n      .attr('d', arcl)\r\n      .attr('fill', function (d, i) {\r\n        return color(i);\r\n      })\r\n      .attr('transform', `translate(${canvasWidth / 4}, ${canvasHeight / 2})`);\r\n\r\n    const g = svgCanvas\r\n      .append('g')\r\n      .attr('transform', `translate(${margin.left}, ${margin.top})`);\r\n    g.append('text')\r\n      .attr('y', margin.top)\r\n      .attr('x', margin.left)\r\n      .text('Donut Chart');\r\n    g.append('text')\r\n      .attr('y', canvasHeight / 3)\r\n      .attr('x', canvasWidth / 2)\r\n      .text('Grade A');\r\n    g.append('text')\r\n      .attr('y', canvasHeight / 3 + 20)\r\n      .attr('x', canvasWidth / 2)\r\n      .text('Grade B');\r\n  }\r\n\r\n  useEffect(() => {\r\n    // draw canvas\r\n    const svgCanvas = select(svgRef.current)\r\n      .append('svg')\r\n      .attr('width', canvasWidth)\r\n      .attr('height', canvasHeight)\r\n      .attr('margin', 10)\r\n      .style('border', '1px solid black');\r\n\r\n    drawBarChar(svgCanvas);\r\n    return () => {\r\n      // remove canvas\r\n      svgCanvas.remove();\r\n    };\r\n  });\r\n\r\n  function changeSelect(typeData) {\r\n    console.log(typeData);\r\n    if (typeData == 'compute') {\r\n      const piece = pie()\r\n        .value(function (d) {\r\n          return d.value;\r\n        })\r\n        .sort(null)(dataBrandComputer);\r\n      const width = 360;\r\n      const height = 360;\r\n      const radius = Math.min(width, height) / 2;\r\n      const donutWidth = 75;\r\n      const path = select(svgRef.current).selectAll('path').data(piece); // Compute the new angles\r\n      const arcl = arc()\r\n        .innerRadius(radius - donutWidth)\r\n        .outerRadius(radius);\r\n      path.transition().duration(500).attr('d', arcl); // redrawing the path with a smooth transition\r\n    } else {\r\n      const piece = pie()\r\n        .value(function (d) {\r\n          return d.value;\r\n        })\r\n        .sort(null)(dataBrandClothing);\r\n      const width = 360;\r\n      const height = 360;\r\n      const radius = Math.min(width, height) / 2;\r\n      const donutWidth = 75;\r\n      const path = select(svgRef.current).selectAll('path').data(piece); // Compute the new angles\r\n      const arcl = arc()\r\n        .innerRadius(radius - donutWidth)\r\n        .outerRadius(radius);\r\n      path.transition().duration(500).attr('d', arcl); // redrawing the path with a smooth transition\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        ref={svgRef}\r\n        style={{\r\n          marginLeft: 10,\r\n          marginTop: 60\r\n        }}\r\n      ></div>\r\n      <div>\r\n        <button id=\"compute\" onClick={() => changeSelect('compute')}>\r\n          Computer brand\r\n        </button>\r\n        &nbsp;&nbsp;&nbsp;&nbsp;\r\n        <button id=\"clothing\" onClick={() => changeSelect('clothing')}>\r\n          Clothing brand\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DonutChart;\r\n","E:\\Source Code\\my-app\\src\\chart\\data\\dataLineChart.jsx",[],"E:\\Source Code\\my-app\\src\\chart\\data\\dataDonutChart.jsx",[],"E:\\Source Code\\my-app\\src\\views\\Statistical.js",[],"E:\\Source Code\\my-app\\src\\chart\\data\\dataBasicChart.jsx",[],"E:\\Source Code\\my-app\\src\\reducers\\TaiKhoanReducer.js",[],"E:\\Source Code\\my-app\\src\\components\\Blockchain\\EntryForm.js",[],"E:\\Source Code\\my-app\\src\\components\\Blockchain\\Result.js",["504"],"import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as action from '../../actions/index';\r\n\r\nclass Result extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  deleteList = courseId => {\r\n    this.props.deleteThisCourse(courseId);\r\n    this.props.deleteCourseOnSuccess(courseId);\r\n    this.props.updateCourseOnFailure();\r\n    this.props.saveCourseOnFailure();\r\n  };\r\n\r\n  contentAlert = () => {\r\n    switch (true) {\r\n      case this.props.saveAction:\r\n        return 'Save';\r\n      case this.props.deleteAction:\r\n        return 'Delete';\r\n      case this.props.updateAction:\r\n        return 'Update';\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  displayAlert = () => {\r\n    return (\r\n      <span className=\"alert alert-success foo\">\r\n        <strong>\r\n          {this.contentAlert()} {this.props.courseChange} On Success!\r\n        </strong>\r\n      </span>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const columnTitles = [\r\n      'STT',\r\n      'Semester',\r\n      'Course Title',\r\n      'Course Id',\r\n      'Credits',\r\n      'Process',\r\n      'Examination',\r\n      'Factor',\r\n      'Action',\r\n      'Point',\r\n      'Grade'\r\n    ];\r\n\r\n    return (\r\n      <div\r\n        className=\"card mt-3\"\r\n        // className=\"row-mt-15 format-table text\"\r\n      >\r\n        <div\r\n          className=\"card-header bg-light\"\r\n          // className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\"\r\n        >\r\n          <b>\r\n            <h5 className=\"m-0 p-0\">Result</h5>\r\n          </b>\r\n        </div>\r\n        <div className=\"card-body p-0 m-0\">\r\n          <table className=\"table table-bordered table-hover\">\r\n            <thead>\r\n              <tr style={{ backgroundColor: '#8C1515', color: '#FFFFFF' }}>\r\n                {columnTitles.map((columnTitle, index) => (\r\n                  <th className=\"text-center\" key={index}>\r\n                    {columnTitle}\r\n                  </th>\r\n                ))}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {this.props.courseList.length !== 0 ? (\r\n                this.props.courseList.map((item, index) => (\r\n                  <tr key={index}>\r\n                    <td className=\"text-center\">{index + 1}</td>\r\n                    <td className=\"text-center\">{item.semester}</td>\r\n                    <td>{item.courseTitle}</td>\r\n                    <td className=\"text-center\">{item.courseId}</td>\r\n                    <td className=\"text-center\">{item.credits}</td>\r\n                    <td className=\"text-center\">{item.process}</td>\r\n                    <td className=\"text-center\">{item.examination}</td>\r\n                    <td className=\"text-center\">{item.factor}</td>\r\n                    <td className=\"text-center\">\r\n                      <button\r\n                        className=\"btn btn-primary mr-2\"\r\n                        onClick={() => this.props.editThisCourse(item)}\r\n                      >\r\n                        Edit\r\n                      </button>\r\n                      <button\r\n                        className=\"btn btn-danger\"\r\n                        onClick={() => this.deleteList(item.courseId)}\r\n                      >\r\n                        Delete\r\n                      </button>\r\n                    </td>\r\n                    <td className=\"text-center\">\r\n                      {item.process * (1 - item.factor) +\r\n                        item.examination * item.factor}\r\n                    </td>\r\n                    <td className=\"text-center\">{item.grade}</td>\r\n                  </tr>\r\n                ))\r\n              ) : (\r\n                <tr>\r\n                  <td \r\n                  colspan=\"11\" \r\n                  className=\"text-center\"\r\n                  style={{color: \"#8C1515\"}}>\r\n                    <strong>Data not found</strong>\r\n                  </td>\r\n                </tr>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n          <span>{this.props.takeAction ? this.displayAlert() : ''}</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  courseList: state.TranscriptReducer.courseList,\r\n  isReg: state.TranscriptReducer.isReg\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n  return {\r\n    deleteThisCourse: courseId => {\r\n      dispatch(action.deleteThisCourse(courseId));\r\n    },\r\n    editThisCourse: item => {\r\n      dispatch(action.editThisCourse(item));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Result);\r\n",{"ruleId":"505","severity":1,"message":"506","line":13,"column":8,"nodeType":"507","messageId":"508","endLine":13,"endColumn":13},{"ruleId":"509","replacedBy":"510"},{"ruleId":"511","replacedBy":"512"},{"ruleId":"509","replacedBy":"513"},{"ruleId":"511","replacedBy":"514"},{"ruleId":"509","replacedBy":"515"},{"ruleId":"511","replacedBy":"516"},{"ruleId":"509","replacedBy":"517"},{"ruleId":"511","replacedBy":"518"},{"ruleId":"505","severity":1,"message":"519","line":16,"column":5,"nodeType":"507","messageId":"508","endLine":16,"endColumn":15},{"ruleId":"509","replacedBy":"520"},{"ruleId":"511","replacedBy":"521"},{"ruleId":"522","severity":1,"message":"523","line":33,"column":6,"nodeType":"524","endLine":33,"endColumn":17,"suggestions":"525"},{"ruleId":"526","severity":1,"message":"527","line":88,"column":1,"nodeType":"528","messageId":"529","endLine":97,"endColumn":15},{"ruleId":"505","severity":1,"message":"530","line":3,"column":8,"nodeType":"507","messageId":"508","endLine":3,"endColumn":18},{"ruleId":"505","severity":1,"message":"531","line":11,"column":13,"nodeType":"507","messageId":"508","endLine":11,"endColumn":19},{"ruleId":"505","severity":1,"message":"532","line":23,"column":12,"nodeType":"507","messageId":"508","endLine":23,"endColumn":18},{"ruleId":"505","severity":1,"message":"533","line":25,"column":14,"nodeType":"507","messageId":"508","endLine":25,"endColumn":29},{"ruleId":"505","severity":1,"message":"534","line":29,"column":14,"nodeType":"507","messageId":"508","endLine":29,"endColumn":30},{"ruleId":"522","severity":1,"message":"535","line":23,"column":6,"nodeType":"524","endLine":23,"endColumn":14,"suggestions":"536"},{"ruleId":"537","severity":1,"message":"538","line":11,"column":1,"nodeType":"539","endLine":26,"endColumn":2},{"ruleId":"537","severity":1,"message":"538","line":120,"column":1,"nodeType":"539","endLine":181,"endColumn":2},{"ruleId":"537","severity":1,"message":"538","line":15,"column":1,"nodeType":"539","endLine":44,"endColumn":2},{"ruleId":"522","severity":1,"message":"540","line":30,"column":6,"nodeType":"524","endLine":30,"endColumn":8,"suggestions":"541"},{"ruleId":"522","severity":1,"message":"542","line":64,"column":6,"nodeType":"524","endLine":64,"endColumn":8,"suggestions":"543"},{"ruleId":"522","severity":1,"message":"544","line":34,"column":6,"nodeType":"524","endLine":34,"endColumn":18,"suggestions":"545"},{"ruleId":"546","severity":1,"message":"547","line":34,"column":7,"nodeType":"507","messageId":"548","endLine":34,"endColumn":17},{"ruleId":"522","severity":1,"message":"549","line":94,"column":6,"nodeType":"524","endLine":94,"endColumn":16,"suggestions":"550"},{"ruleId":"522","severity":1,"message":"551","line":22,"column":17,"nodeType":"507","endLine":22,"endColumn":24},{"ruleId":"522","severity":1,"message":"552","line":27,"column":6,"nodeType":"524","endLine":27,"endColumn":8,"suggestions":"553"},{"ruleId":"505","severity":1,"message":"554","line":3,"column":22,"nodeType":"507","messageId":"508","endLine":3,"endColumn":28},{"ruleId":"555","severity":1,"message":"556","line":88,"column":33,"nodeType":"557","endLine":90,"endColumn":69},{"ruleId":"555","severity":1,"message":"556","line":95,"column":33,"nodeType":"557","endLine":97,"endColumn":69},{"ruleId":"555","severity":1,"message":"556","line":102,"column":33,"nodeType":"557","endLine":104,"endColumn":69},{"ruleId":"509","replacedBy":"558"},{"ruleId":"511","replacedBy":"559"},{"ruleId":"505","severity":1,"message":"560","line":59,"column":7,"nodeType":"507","messageId":"508","endLine":59,"endColumn":10},{"ruleId":"509","replacedBy":"561"},{"ruleId":"511","replacedBy":"562"},{"ruleId":"505","severity":1,"message":"563","line":1,"column":27,"nodeType":"507","messageId":"508","endLine":1,"endColumn":36},{"ruleId":"505","severity":1,"message":"564","line":18,"column":5,"nodeType":"507","messageId":"508","endLine":18,"endColumn":16},{"ruleId":"509","replacedBy":"565"},{"ruleId":"511","replacedBy":"566"},{"ruleId":"522","severity":1,"message":"567","line":80,"column":6,"nodeType":"524","endLine":80,"endColumn":12,"suggestions":"568"},{"ruleId":"522","severity":1,"message":"569","line":48,"column":9,"nodeType":"570","endLine":53,"endColumn":4},{"ruleId":"505","severity":1,"message":"571","line":7,"column":16,"nodeType":"507","messageId":"508","endLine":7,"endColumn":23},{"ruleId":"522","severity":1,"message":"572","line":43,"column":6,"nodeType":"524","endLine":43,"endColumn":19,"suggestions":"573"},{"ruleId":"505","severity":1,"message":"574","line":1,"column":36,"nodeType":"507","messageId":"508","endLine":1,"endColumn":44},{"ruleId":"505","severity":1,"message":"575","line":4,"column":3,"nodeType":"507","messageId":"508","endLine":4,"endColumn":14},{"ruleId":"505","severity":1,"message":"576","line":5,"column":3,"nodeType":"507","messageId":"508","endLine":5,"endColumn":12},{"ruleId":"505","severity":1,"message":"577","line":6,"column":3,"nodeType":"507","messageId":"508","endLine":6,"endColumn":11},{"ruleId":"505","severity":1,"message":"578","line":7,"column":3,"nodeType":"507","messageId":"508","endLine":7,"endColumn":6},{"ruleId":"505","severity":1,"message":"579","line":8,"column":3,"nodeType":"507","messageId":"508","endLine":8,"endColumn":13},{"ruleId":"505","severity":1,"message":"580","line":44,"column":11,"nodeType":"507","messageId":"508","endLine":44,"endColumn":15},{"ruleId":"581","severity":1,"message":"582","line":90,"column":18,"nodeType":"583","messageId":"584","endLine":90,"endColumn":20},{"ruleId":"585","severity":1,"message":"586","line":6,"column":3,"nodeType":"587","messageId":"588","endLine":8,"endColumn":4},"no-unused-vars","'store' is defined but never used.","Identifier","unusedVar","no-native-reassign",["589"],"no-negated-in-lhs",["590"],["589"],["590"],["589"],["590"],["589"],["590"],"'sortAction' is assigned a value but never used.",["589"],["590"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'name'. Either include it or remove the dependency array.","ArrayExpression",["591"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'classNames' is defined but never used.","'hidden' is assigned a value but never used.","'appear' is assigned a value but never used.","'processOpenList' is defined but never used.","'processCloseList' is defined but never used.","React Hook useMemo has an unnecessary dependency: 'routes'. Either exclude it or remove the dependency array. Outer scope values like 'routes' aren't valid dependencies because mutating them doesn't re-render the component.",["592"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","React Hook useEffect has a missing dependency: 'generateColorIfNeeded'. Either include it or remove the dependency array. If 'generateColorIfNeeded' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["593"],"React Hook useEffect has a missing dependency: 'generateGradientIfNeeded'. Either include it or remove the dependency array. If 'generateGradientIfNeeded' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["594"],"React Hook useEffect has missing dependencies: 'onMouseMove' and 'onMouseUp'. Either include them or remove the dependency array.",["595"],"no-use-before-define","'showSlider' was used before it was defined.","usedBeforeDefined","React Hook useMemo has missing dependencies: 'editColorOfGradient', 'onMouseDown', and 'toggleEditColorOfGradient'. Either include them or remove the dependency array.",["596"],"The ref value 'handleRef.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'handleRef.current' to a variable inside the effect, and use that variable in the cleanup function.","React Hook useEffect has a missing dependency: 'onMouseMove'. Either include it or remove the dependency array.",["597"],"'Router' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["589"],["590"],"'GPA' is assigned a value but never used.",["589"],["590"],"'useEffect' is defined but never used.","'handleState' is assigned a value but never used.",["589"],["590"],"React Hook useEffect has an unnecessary dependency: 'data'. Either exclude it or remove the dependency array. Outer scope values like 'data' aren't valid dependencies because mutating them doesn't re-render the component.",["598"],"The 'margin' object makes the dependencies of useCallback Hook (at line 97) change on every render. Move it inside the useCallback callback. Alternatively, wrap the initialization of 'margin' in its own useMemo() Hook.","VariableDeclarator","'setData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'drawBarChar'. Either include it or remove the dependency array.",["599"],"'useState' is defined but never used.","'scaleLinear' is defined but never used.","'scaleBand' is defined but never used.","'axisLeft' is defined but never used.","'max' is defined but never used.","'axisBottom' is defined but never used.","'path' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation",{"desc":"600","fix":"601"},{"desc":"602","fix":"603"},{"desc":"604","fix":"605"},{"desc":"606","fix":"607"},{"desc":"608","fix":"609"},{"desc":"610","fix":"611"},{"desc":"612","fix":"613"},{"desc":"602","fix":"614"},{"desc":"615","fix":"616"},"Update the dependencies array to be: [isEditing, name]",{"range":"617","text":"618"},"Update the dependencies array to be: []",{"range":"619","text":"620"},"Update the dependencies array to be: [generateColorIfNeeded]",{"range":"621","text":"622"},"Update the dependencies array to be: [generateGradientIfNeeded]",{"range":"623","text":"624"},"Update the dependencies array to be: [onMouseMove, onMouseUp, showSlider]",{"range":"625","text":"626"},"Update the dependencies array to be: [editColorOfGradient, gradient, onMouseDown, toggleEditColorOfGradient]",{"range":"627","text":"628"},"Update the dependencies array to be: [onMouseMove]",{"range":"629","text":"630"},{"range":"631","text":"620"},"Update the dependencies array to be: [scale, data, drawBarChar]",{"range":"632","text":"633"},[763,774],"[isEditing, name]",[616,624],"[]",[791,793],"[generateColorIfNeeded]",[1939,1941],"[generateGradientIfNeeded]",[991,1003],"[onMouseMove, onMouseUp, showSlider]",[2878,2888],"[editColorOfGradient, gradient, onMouseDown, toggleEditColorOfGradient]",[826,828],"[onMouseMove]",[1849,1855],[1279,1292],"[scale, data, drawBarChar]"]
[{"E:\\Source Code\\my-app\\src\\index.js":"1","E:\\Source Code\\my-app\\src\\store.js":"2","E:\\Source Code\\my-app\\src\\serviceWorker.js":"3","E:\\Source Code\\my-app\\src\\App.js":"4","E:\\Source Code\\my-app\\src\\reducers\\index.js":"5","E:\\Source Code\\my-app\\src\\reducers\\root.js":"6","E:\\Source Code\\my-app\\src\\reducers\\dataMembers.js":"7","E:\\Source Code\\my-app\\src\\reducers\\sampleMembers.js":"8","E:\\Source Code\\my-app\\src\\components\\NewRow.js":"9","E:\\Source Code\\my-app\\src\\components\\Display.js":"10","E:\\Source Code\\my-app\\src\\components\\HandleRow.js":"11","E:\\Source Code\\my-app\\src\\components\\SampleRow.js":"12","E:\\Source Code\\my-app\\src\\components\\TodoList.js":"13","E:\\Source Code\\my-app\\src\\components\\Header.js":"14","E:\\Source Code\\my-app\\src\\components\\CurrentRow.js":"15","E:\\Source Code\\my-app\\src\\components\\todo-container\\TodoContainer.js":"16","E:\\Source Code\\my-app\\src\\components\\change-theme\\ChangeThem.js":"17","E:\\Source Code\\my-app\\src\\redux\\demoRedux.js":"18","E:\\Source Code\\my-app\\src\\components\\Card.js":"19","E:\\Source Code\\my-app\\src\\reducers\\visibleTodoFilter.reducer.js":"20","E:\\Source Code\\my-app\\src\\reducers\\visibleTheme.reducer.js":"21","E:\\Source Code\\my-app\\src\\reducers\\todoList.reducer.js":"22","E:\\Source Code\\my-app\\src\\constants\\ActionTypes.js":"23","E:\\Source Code\\my-app\\src\\constants\\visibleState.js":"24","E:\\Source Code\\my-app\\src\\components\\Total\\Total.js":"25","E:\\Source Code\\my-app\\src\\actions\\index.js":"26","E:\\Source Code\\my-app\\src\\actions\\theme.action.js":"27","E:\\Source Code\\my-app\\src\\components\\todo-container\\add-item-form\\AddItemForm.js":"28","E:\\Source Code\\my-app\\src\\components\\todo-container\\todo-item\\ToDoItem.js":"29","E:\\Source Code\\my-app\\src\\components\\todo-container\\empty-list\\EmptyList.js":"30","E:\\Source Code\\my-app\\src\\components\\List\\List.js":"31","E:\\Source Code\\my-app\\src\\components\\Search\\Search.js":"32","E:\\Source Code\\my-app\\src\\components\\Message\\Message.js":"33","E:\\Source Code\\my-app\\src\\redux\\actions\\index.js":"34","E:\\Source Code\\my-app\\src\\redux\\reducers\\index.js":"35","E:\\Source Code\\my-app\\src\\components\\UserGroup.js":"36","E:\\Source Code\\my-app\\src\\components\\TopCard.js":"37","E:\\Source Code\\my-app\\src\\components\\User.js":"38","E:\\Source Code\\my-app\\src\\components\\NameTeam.js":"39","E:\\Source Code\\my-app\\src\\components\\Icon.js":"40","E:\\Source Code\\my-app\\src\\constants\\Types.js":"41","E:\\Source Code\\my-app\\src\\actions\\todo-item.action.js":"42","E:\\Source Code\\my-app\\src\\actions\\visibleTodoFitler.action.js":"43","E:\\Source Code\\my-app\\src\\redux\\reducers\\status.js":"44","E:\\Source Code\\my-app\\src\\redux\\reducers\\sort.js":"45","E:\\Source Code\\my-app\\src\\components\\List\\Item.js":"46","E:\\Source Code\\my-app\\src\\redux\\constants\\ActionTypes.js":"47","E:\\Source Code\\my-app\\src\\reducers\\TaskReducer.js":"48"},{"size":723,"mtime":1613653971399,"results":"49","hashOfConfig":"50"},{"size":229,"mtime":1608878784587,"results":"51","hashOfConfig":"50"},{"size":5227,"mtime":1613649061705,"results":"52","hashOfConfig":"50"},{"size":9343,"mtime":1613729337064,"results":"53","hashOfConfig":"50"},{"size":268,"mtime":1613649061700,"results":"54","hashOfConfig":"50"},{"size":533,"mtime":1613664728183,"results":"55","hashOfConfig":"50"},{"size":667,"mtime":1613649061699,"results":"56","hashOfConfig":"50"},{"size":488,"mtime":1613649061700,"results":"57","hashOfConfig":"50"},{"size":1873,"mtime":1613649061690,"results":"58","hashOfConfig":"50"},{"size":1791,"mtime":1613811474615,"results":"59","hashOfConfig":"50"},{"size":1319,"mtime":1613649061687,"results":"60","hashOfConfig":"50"},{"size":1574,"mtime":1613649061691,"results":"61","hashOfConfig":"50"},{"size":892,"mtime":1613660659103,"results":"62","hashOfConfig":"50"},{"size":1452,"mtime":1613816082698,"results":"63","hashOfConfig":"50"},{"size":2889,"mtime":1613649061685,"results":"64","hashOfConfig":"50"},{"size":1661,"mtime":1608878784582,"results":"65","hashOfConfig":"50"},{"size":1067,"mtime":1613708323772,"results":"66","hashOfConfig":"50"},{"size":690,"mtime":1613649061703,"results":"67","hashOfConfig":"50"},{"size":1852,"mtime":1613649061684,"results":"68","hashOfConfig":"50"},{"size":362,"mtime":1608878784586,"results":"69","hashOfConfig":"50"},{"size":297,"mtime":1608878784585,"results":"70","hashOfConfig":"50"},{"size":987,"mtime":1608878784585,"results":"71","hashOfConfig":"50"},{"size":169,"mtime":1613649061696,"results":"72","hashOfConfig":"50"},{"size":110,"mtime":1608878784584,"results":"73","hashOfConfig":"50"},{"size":718,"mtime":1609472062913,"results":"74","hashOfConfig":"50"},{"size":401,"mtime":1613649061682,"results":"75","hashOfConfig":"50"},{"size":161,"mtime":1608878784543,"results":"76","hashOfConfig":"50"},{"size":3374,"mtime":1613709242816,"results":"77","hashOfConfig":"50"},{"size":3452,"mtime":1608878784583,"results":"78","hashOfConfig":"50"},{"size":313,"mtime":1608878784583,"results":"79","hashOfConfig":"50"},{"size":777,"mtime":1609472062911,"results":"80","hashOfConfig":"50"},{"size":3076,"mtime":1613729092348,"results":"81","hashOfConfig":"50"},{"size":847,"mtime":1609472062911,"results":"82","hashOfConfig":"50"},{"size":253,"mtime":1613649061701,"results":"83","hashOfConfig":"50"},{"size":258,"mtime":1613649061703,"results":"84","hashOfConfig":"50"},{"size":1655,"mtime":1613649061695,"results":"85","hashOfConfig":"50"},{"size":2063,"mtime":1613649061693,"results":"86","hashOfConfig":"50"},{"size":383,"mtime":1613649061694,"results":"87","hashOfConfig":"50"},{"size":271,"mtime":1613649061689,"results":"88","hashOfConfig":"50"},{"size":414,"mtime":1613649061688,"results":"89","hashOfConfig":"50"},{"size":292,"mtime":1608878784584,"results":"90","hashOfConfig":"50"},{"size":548,"mtime":1608878784543,"results":"91","hashOfConfig":"50"},{"size":169,"mtime":1608878784543,"results":"92","hashOfConfig":"50"},{"size":213,"mtime":1613649061704,"results":"93","hashOfConfig":"50"},{"size":378,"mtime":1613649061704,"results":"94","hashOfConfig":"50"},{"size":7009,"mtime":1613810885593,"results":"95","hashOfConfig":"50"},{"size":72,"mtime":1613649061702,"results":"96","hashOfConfig":"50"},{"size":4995,"mtime":1613710562157,"results":"97","hashOfConfig":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"101"},"vrv1zh",{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"101"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"101"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"101"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"101"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},"E:\\Source Code\\my-app\\src\\index.js",["200","201"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\n//store\r\nimport { createStore } from \"redux\";\r\nimport myReducer from \"./reducers/index\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./scss/reset.scss\";\r\nimport \"./scss/components.scss\";\r\n\r\n// const store = createStore(myReducer);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n  <Provider store={store}>\r\n      <App />\r\n  </Provider>   \r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();",["202","203"],"E:\\Source Code\\my-app\\src\\store.js",[],"E:\\Source Code\\my-app\\src\\serviceWorker.js",[],"E:\\Source Code\\my-app\\src\\App.js",["204","205"],"import React, { Component } from \"react\";\r\nimport './App.scss';\r\nimport TodoContainer from './components/todo-container/TodoContainer';\r\nimport { connect } from \"react-redux\";\r\nimport ChangeThem from './components/change-theme/ChangeThem';\r\nimport Header from \"./components/Header\";\r\nimport Display from \"./components/Display\";\r\nimport dataMembers from \"./allDataMember.json\";\r\nimport sampleMemberData from \"./sampleData.json\";\r\nimport NewRow from \"./components/NewRow\";\r\nimport HandleRow from \"./components/HandleRow\";\r\nimport CurrentRow from \"./components/CurrentRow\";\r\nimport SampleRow from \"./components/SampleRow\";\r\nimport TodoList from './components/TodoList';\r\nimport \"./App.css\";\r\nimport demoRedux from \"./redux/demoRedux\";\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      sampleMemberData: sampleMemberData,\r\n      defaultTeamName: \"New Name\",\r\n      userTiltle: \"USERS\",\r\n      managerTiltle: \"MANAGERS\",\r\n      data: dataMembers,\r\n      originData: dataMembers,\r\n      ordinalNumber: \"Auto\",\r\n      newTeamName: \"\",\r\n      newMemberName: \"\",\r\n      status: \"\",\r\n      position: \"user\",\r\n      edittingId: [],\r\n      isSaveOnSuccess: false,\r\n      isAddOnMoreData: false,\r\n      numberOfRow: 0,\r\n      dataAPI: [],\r\n      newRow: {},\r\n      data15: dataMembers,\r\n      columnTitles: [\"Ordinal number\", \"New team name\", \"Position\", \"New Member Name\", \"Action\", \"Status\"]\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const data = await fetch('https://jsonplaceholder.typicode.com/todos')\r\n      const data2 = await data.json()\r\n      this.setState({\r\n        dataAPI: data2\r\n      })\r\n    } catch (err) {\r\n      console.log('loi', err);\r\n    }\r\n  }\r\n\r\n  // componentWillMount(){\r\n  //   if(localStorage&&localStorage.getItem(\"task\")){\r\n  //     var tasks = JSON.parse(localStorage.getItem(\"task\"))\r\n  //     this.setState({\r\n  //       tasks : tasks\r\n  //     });\r\n  //   }\r\n  // }\r\n\r\n  handleSave = () => {\r\n    console.log(this.state)\r\n    const checkStatus = () => {\r\n      if(this.state.newMemberName!== \"\" &&this.state.newTeamName!== \"\")\r\n      {\r\n        return \"Pending\"\r\n      }\r\n      return \"Error\"\r\n    }\r\n    this.setState({\r\n      isSaveOnSuccess: !this.state.isSaveOnSuccess,\r\n      ordinalNumber: (this.state.status===\"Pending\")?\"1\":\"\",\r\n      status: checkStatus(),\r\n    })\r\n  }\r\n\r\n  handleAddMoreData = () => {  \r\n    this.setState({\r\n      // ordinalNumber: \"Auto\",\r\n      ...this.state.isAddOnMoreData,\r\n      isAddOnMoreData: true,\r\n      numberOfRow: this.state.numberOfRow+1,\r\n      newRow: {\r\n        ordinalNumber: \"Auto\",\r\n        newTeamName: \"\",\r\n        position: \"user\",\r\n        newMemberName: \"\",\r\n        status: \"\"\r\n      }\r\n    })\r\n  }\r\n\r\n  handleAddNewTeam = (event) => {\r\n    this.setState({\r\n      data: [\r\n        ...this.state.data,\r\n        {\r\n          \"id\": \"null\",\r\n          \"name\": \"\",\r\n          \"creator\": \"\",\r\n          \"memberIds\": [\r\n          ],\r\n          \"managerIds\": [\r\n          ]\r\n        },\r\n      ]\r\n    })\r\n  }\r\n\r\n  handleChangeTeamName = (event) => {\r\n    const { value } = event.target;\r\n    this.setState({\r\n      newTeamName: value \r\n    })\r\n  }\r\n\r\n  handleChangeMemberName = (event) => {\r\n    const { value } = event.target;\r\n    this.setState({\r\n      newMemberName: value\r\n    })\r\n  }\r\n\r\n  handleChangeSearchBox = (event) => {\r\n    const { value } = event.target;\r\n    const { originData } = this.state;\r\n    const newData = originData.filter(item => {\r\n      const { memberIds, managerIds } = item;\r\n      const matchUserId = [...memberIds, ...managerIds].filter(({ firstName = \"\", lastName = \"\" }) => firstName.includes(value) || lastName.includes(value))\r\n      if (matchUserId.length > 0) {\r\n        return true;\r\n      }\r\n      return item.name.includes(value);\r\n    })\r\n    this.setState((oldState) => ({\r\n      ...oldState,\r\n      value,\r\n      data: newData,\r\n    }))\r\n  }\r\n\r\n  handleClearTeam = (id) => {\r\n    console.log(this.state);\r\n    this.setState((oldState) => ({\r\n      ...oldState,\r\n      data: oldState.data.filter(item => item.id !== id)\r\n    }))\r\n  }\r\n\r\n  handleEditTeamName = (id, event) => {\r\n    const { newName } = event.target;\r\n    const { edittingId } = this.state;\r\n    const newEdittingId = edittingId.includes(id)\r\n      ?\r\n      edittingId.filter(item => item !== id)\r\n      :\r\n      [...edittingId, id]\r\n    this.setState({\r\n      defaultTeamName: newName,\r\n      edittingId: newEdittingId,\r\n    })\r\n  }\r\n\r\n  handleChangeName = (event) => {\r\n    const { newName } = event.target;\r\n    this.setState({\r\n      defaultTeamName: newName,\r\n    })\r\n  }\r\n\r\n  handleSelectOption = (event) => {\r\n    const { value } = event.target; \r\n    this.setState({\r\n      position: value\r\n    });\r\n  }\r\n\r\n  handleChangeName1 = (id, newName) => {\r\n    const { originData, edittingId } = this.state;\r\n    const newData = originData.map(item => {\r\n      if (item.id === id) {\r\n        return {\r\n          ...item,\r\n          name: newName\r\n        }\r\n      }\r\n      return item\r\n    })\r\n\r\n    const newEdittingId = edittingId.filter(item => item !== id)\r\n\r\n    this.setState({\r\n      edittingId: newEdittingId,\r\n      data: newData,\r\n      originData: newData,\r\n    })\r\n  }\r\n\r\n  handleCreateNew = (newState) => {\r\n    console.log(\"newState\", newState)\r\n    this.setState({\r\n      data15: newState\r\n    })\r\n    console.log(\"data15\", this.state.data15)\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      userTiltle,\r\n      managerTiltle,\r\n      edittingId,\r\n      dataAPI,\r\n      value,\r\n      columnTitles\r\n    } = this.state;\r\n    console.log(\"numberOfRow\", this.state.numberOfRow);\r\n    return (\r\n      <div>\r\n        <div>{dataAPI.title}</div>\r\n        <span>\r\n        <TodoList /> \r\n        </span>\r\n        <div className={\"App \" + this.props.visibleTheme}>\r\n        <ChangeThem />\r\n        {/* <TodoContainer /> */}\r\n        </div>\r\n        <Header\r\n          handleAddNewTeam = {this.handleAddNewTeam}\r\n          handleChangeSearchBox={this.handleChangeSearchBox}\r\n          handleCreateNew={this.handleCreateNew}\r\n          value={value}\r\n        />     \r\n        <div className=\"row-mt-15 format-table\">\r\n          <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n          <table className=\"table table-bordered table-hover\">\r\n          <thead>\r\n            <tr>\r\n              {columnTitles.map((columnTitle) => (<th className=\"text-center\">{columnTitle}</th>))}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n          <SampleRow />\r\n          </tbody>    \r\n          <tfoot>\r\n          {(this.state.status===\"Pending\")\r\n          ?\r\n          (<HandleRow \r\n          status={this.state.status} \r\n          handleSave={this.handleSave}\r\n          handleAddMoreData={this.handleAddMoreData}\r\n          ordinalNumber={this.state.ordinalNumber}\r\n          newMemberName={this.state.newMemberName}\r\n          newTeamName={this.state.newTeamName}\r\n          position={this.state.position}    \r\n          />)\r\n          :\r\n          (<CurrentRow\r\n          isAddOnMoreData={this.state.isAddOnMoreData}\r\n          status={this.state.status} \r\n          handleSave={this.handleSave}\r\n          handleAddMoreData={this.handleAddMoreData}\r\n          ordinalNumber={this.state.ordinalNumber}\r\n          newMemberName={this.state.newMemberName}\r\n          newTeamName={this.state.newTeamName}\r\n          handleChangeTeamName={this.handleChangeTeamName}\r\n          handleChangeMemberName={this.handleChangeMemberName}\r\n          position={this.state.position} \r\n          handleSelectOption={this.handleSelectOption} \r\n          />)}\r\n          <>{(this.state.isAddOnMoreData)&&\r\n          (<NewRow \r\n          status={this.state.status} \r\n          handleSave={this.handleSave}\r\n          handleAddMoreData={this.handleAddMoreData}\r\n          ordinalNumber={this.state.ordinalNumber}\r\n          handleChangeTeamName={this.handleChangeTeamName}\r\n          handleChangeMemberName={this.handleChangeMemberName}\r\n          newMemberName={this.state.newMemberName}\r\n          newTeamName={this.state.newTeamName}    \r\n          />)}</>\r\n          </tfoot>         \r\n            </table> \r\n            <span>{(this.state.status===\"Pending\")\r\n          ?\r\n          (<div className=\"alert alert-success\">\r\n              <strong>Saved New Member On Success Action!</strong>\r\n          </div>)\r\n          :\r\n          (this.state.status===\"Error\")\r\n          ?\r\n          (<div className=\"alert alert-danger\">\r\n              <strong>Saved New Member On Failure Action!</strong>\r\n          </div>):\r\n          null}  \r\n          </span>         \r\n          <Display \r\n              onClearTeam = {this.handleClearTeam}\r\n              newName = {this.state.defaultTeamName}\r\n              onEditNameTeam = {this.handleEditTeamName}\r\n              handleChangeName = {this.handleChangeName}\r\n              onClickCheckSymbol = {this.handleChangeName1}\r\n              userTiltle = {userTiltle}\r\n              managerTiltle = {managerTiltle}\r\n              edittingId = {edittingId}\r\n              data15={this.state.data15}\r\n          />\r\n          </div>\r\n                 \r\n        </div>\r\n            \r\n      </div>\r\n    );\r\n  };\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    visibleTheme: state.visibleTheme\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(App);","E:\\Source Code\\my-app\\src\\reducers\\index.js",[],"E:\\Source Code\\my-app\\src\\reducers\\root.js",[],"E:\\Source Code\\my-app\\src\\reducers\\dataMembers.js",[],"E:\\Source Code\\my-app\\src\\reducers\\sampleMembers.js",[],"E:\\Source Code\\my-app\\src\\components\\NewRow.js",[],"E:\\Source Code\\my-app\\src\\components\\Display.js",["206"],"import React from \"react\";\r\nimport Card from \"./Card.js\";\r\nimport \"./Draft.css\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction Display(props){\r\n    const { \r\n        dataMembers, \r\n        edittingId,\r\n        onClearTeam, \r\n        userTiltle, \r\n        managerTiltle, \r\n        newName,\r\n        onEditNameTeam,\r\n        handleChangeName,\r\n        onClickCheckSymbol,\r\n        data15\r\n     } = props;\r\n//my-card\r\n    return (\r\n        // <div className = \"grid-container\">\r\n        // {data15.map((post) =>\r\n        //   (<div className=\"grid-item\">\r\n        //   <Card\r\n        //     isEditing={edittingId.includes(post.id)}\r\n        //     onClearTeam={onClearTeam}\r\n        //     newName={newName}\r\n        //     onEditNameTeam={onEditNameTeam}\r\n        //     onChange={handleChangeName}\r\n        //     onClickCheckSymbol={onClickCheckSymbol}\r\n        //     key={post.id}\r\n        //     userTiltle={userTiltle}\r\n        //     managerTiltle={managerTiltle}\r\n        //     cardName={post.name}\r\n        //     {...post}\r\n        //   /></div>))}\r\n        // </div>\r\n        <div className = \"grid-container\">\r\n        {data15.map((post) =>\r\n          <Card\r\n            isEditing={edittingId.includes(post.id)}\r\n            onClearTeam={onClearTeam}\r\n            newName={newName}\r\n            onEditNameTeam={onEditNameTeam}\r\n            onChange={handleChangeName}\r\n            onClickCheckSymbol={onClickCheckSymbol}\r\n            key={post.id}\r\n            userTiltle={userTiltle}\r\n            managerTiltle={managerTiltle}\r\n            cardName={post.name}\r\n            {...post}\r\n          />)}\r\n        </div>)\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    dataMembers: state.dataMembers\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(Display);","E:\\Source Code\\my-app\\src\\components\\HandleRow.js",[],"E:\\Source Code\\my-app\\src\\components\\SampleRow.js",[],"E:\\Source Code\\my-app\\src\\components\\TodoList.js",[],"E:\\Source Code\\my-app\\src\\components\\Header.js",["207","208"],"E:\\Source Code\\my-app\\src\\components\\CurrentRow.js",[],"E:\\Source Code\\my-app\\src\\components\\todo-container\\TodoContainer.js",[],"E:\\Source Code\\my-app\\src\\components\\change-theme\\ChangeThem.js",[],"E:\\Source Code\\my-app\\src\\redux\\demoRedux.js",["209"],"import { createStore } from \"redux\";\r\nimport {status, sort} from \"./actions/index\";\r\nimport myReducer from \"./reducers/index\";\r\n\r\nconst store = createStore(myReducer);\r\n\r\nconsole.log('Default: ',store.getState());\r\n//Thuc hien cong viec thay doi status\r\n// var action = { type : \"TOGGLE_STATUS\"};\r\n\r\n// store.dispatch(action);\r\nstore.dispatch(status());\r\n\r\nconsole.log('TOGGLE_STATUS: ',store.getState());\r\n//Thuc hien cong viec sap xep ten tu Z - A\r\nvar sortAction = { \r\n    type : \"SORT\",\r\n    sort : { \r\n        by : \"name\",\r\n        value: -1\r\n    }\r\n}\r\n// store.dispatch(sortAction);\r\nstore.dispatch(sort({\r\n    by: \"name\",\r\n    value: -1\r\n}));\r\nconsole.log('SORT: ',store.getState());","E:\\Source Code\\my-app\\src\\components\\Card.js",[],"E:\\Source Code\\my-app\\src\\reducers\\visibleTodoFilter.reducer.js",[],"E:\\Source Code\\my-app\\src\\reducers\\visibleTheme.reducer.js",[],"E:\\Source Code\\my-app\\src\\reducers\\todoList.reducer.js",[],"E:\\Source Code\\my-app\\src\\constants\\ActionTypes.js",[],"E:\\Source Code\\my-app\\src\\constants\\visibleState.js",[],"E:\\Source Code\\my-app\\src\\components\\Total\\Total.js",[],"E:\\Source Code\\my-app\\src\\actions\\index.js",[],"E:\\Source Code\\my-app\\src\\actions\\theme.action.js",[],"E:\\Source Code\\my-app\\src\\components\\todo-container\\add-item-form\\AddItemForm.js",[],"E:\\Source Code\\my-app\\src\\components\\todo-container\\todo-item\\ToDoItem.js",[],"E:\\Source Code\\my-app\\src\\components\\todo-container\\empty-list\\EmptyList.js",[],"E:\\Source Code\\my-app\\src\\components\\List\\List.js",[],"E:\\Source Code\\my-app\\src\\components\\Search\\Search.js",[],"E:\\Source Code\\my-app\\src\\components\\Message\\Message.js",[],"E:\\Source Code\\my-app\\src\\redux\\actions\\index.js",[],"E:\\Source Code\\my-app\\src\\redux\\reducers\\index.js",[],"E:\\Source Code\\my-app\\src\\components\\UserGroup.js",[],"E:\\Source Code\\my-app\\src\\components\\TopCard.js",[],"E:\\Source Code\\my-app\\src\\components\\User.js",[],"E:\\Source Code\\my-app\\src\\components\\NameTeam.js",[],"E:\\Source Code\\my-app\\src\\components\\Icon.js",[],"E:\\Source Code\\my-app\\src\\constants\\Types.js",[],"E:\\Source Code\\my-app\\src\\actions\\todo-item.action.js",[],"E:\\Source Code\\my-app\\src\\actions\\visibleTodoFitler.action.js",[],"E:\\Source Code\\my-app\\src\\redux\\reducers\\status.js",[],"E:\\Source Code\\my-app\\src\\redux\\reducers\\sort.js",[],"E:\\Source Code\\my-app\\src\\components\\List\\Item.js",["210","211","212","213","214","215","216","217","218","219"],"import React, { useState }from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport style from './Item.module.css';\r\nimport Moment from 'react-moment';\r\nimport 'moment/locale/vi';\r\nimport 'moment-timezone';\r\n// import TodoList from '../TodoList';\r\nimport \"./Item.css\";\r\nimport { \r\n    Button, \r\n    Modal, \r\n    ModalBody, \r\n    ModalFooter, \r\n    ModalHeader, \r\n    Container, \r\n    Row, \r\n    Col, \r\n    Label \r\n} from \"reactstrap\";\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\n\r\nfunction Item(props) {\r\n    const dispatch = useDispatch();\r\n    const { name, priority, done, created, edited } = props.data;\r\n    const [modal, setModal] = useState(false);\r\n    const toggle = () => setModal(!modal);\r\n    const confirmDelete = () => {\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n                return (\r\n                    // <Modal \r\n                    // isOpen={modal} \r\n                    // toggle={toggle}\r\n                    // id=\"success-modal\"\r\n                    // className=\"member-modal\"\r\n                    // >\r\n                    // <ModalHeader \r\n                    // toggle={toggle}\r\n                    // className=\"modal-header glyph-icon simple-icon-info\"\r\n                    // >\r\n                    // Xóa nào\r\n                    // </ModalHeader>\r\n                    // <ModalBody>\r\n                    // Xác nhận xóa {name}\r\n                    // </ModalBody>\r\n                    // <ModalFooter>\r\n                    // <Button \r\n                    // color=\"primary\" \r\n                    // onClick={() => {\r\n                    // dispatch({\r\n                    //     type: 'DELETE_TASK',\r\n                    //     name\r\n                    // })\r\n                    //     onClose();\r\n                    // }}>\r\n                    // Xóa\r\n                    // </Button>{' '}\r\n                    // <Button \r\n                    // color=\"secondary\" \r\n                    // onClick={onClose}>\r\n                    // Hủy\r\n                    // </Button>\r\n                    // </ModalFooter>\r\n                    // </Modal>\r\n                    <div className=\"custom-ui\">\r\n                        <div className={style.sure}>\r\n                            <div className={style.sureIcon}>\r\n                                <i className=\"fa fa-ban\"></i>\r\n                            </div>\r\n                            <div className={style.confirmSure}>Xác nhận xóa công việc này?</div>\r\n                            <div className={style.nameJob}><i className=\"fa fa-clipboard\"></i> {name}</div>\r\n                            <div className={style.wrapBtnSure}>\r\n                                <button className={style.btnSureYes}\r\n                                    onClick={() => {\r\n                                        dispatch({\r\n                                            type: 'DELETE_TASK',\r\n                                            name\r\n                                        })\r\n                                        onClose();\r\n                                    }}\r\n                                >Xác nhận</button>\r\n                                <button className={style.btnSureNo} onClick={onClose}>Hủy</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    // <Modal \r\n                    //     // isOpen={modal} \r\n                    //     // toggle={toggle} \r\n                    //     // onOpened={handleOnClosePopupSuccessError} \r\n                    //     id=\"success-modal\"\r\n                    //     className=\"member-modal\"\r\n                    // >\r\n                    // <ModalHeader \r\n                    //     // toggle={toggle} \r\n                    //     className=\"modal-header glyph-icon simple-icon-info\"\r\n                    // >\r\n                    // Xóa\r\n                    // </ModalHeader>\r\n                    // <ModalBody>\r\n                    // Xác nhận xóa công việc này?\r\n                    // </ModalBody>\r\n                    // <ModalFooter>\r\n                    // <Button \r\n                    // color=\"primary\" \r\n                    // onClick={() => {\r\n                    // dispatch({\r\n                    //     type: 'DELETE_TASK',\r\n                    //     name\r\n                    //     })\r\n                    //     onClose();\r\n                    // }}\r\n                    // >\r\n                    // Xác nhận\r\n                    // </Button>\r\n                    // <Button \r\n                    // color=\"secondary\" \r\n                    // onClick={onClose}\r\n                    // >\r\n                    // Hủy\r\n                    // </Button>\r\n                    // </ModalFooter>\r\n                    // </Modal>\r\n                );\r\n            }\r\n        });\r\n    }\r\n\r\n    let classPri = style.itemPriMedium;\r\n    let iconPri = style.iconMedium;\r\n    if (priority === \"Ưu tiên thấp\") {\r\n        classPri = style.itemPriLow;\r\n        iconPri = style.iconLow;\r\n    }\r\n    if (priority === \"Ưu tiên cao\") {\r\n        classPri = style.itemPriHigh;\r\n        iconPri = style.iconHigh;\r\n    }\r\n\r\n    const checkTask = (name) => {\r\n        dispatch({\r\n            type: 'CHECK_TASK',\r\n            name\r\n        })\r\n    }\r\n\r\n    const editTask = () => {\r\n        dispatch({\r\n            type: 'EDIT_TASK',\r\n            data: props.data\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className={style.containerItem}>\r\n            <div className={style.iconTitle}>\r\n                {done ? <i className=\"fa fa-clipboard-check\"></i> : <i className=\"fa fa-clipboard\" style={{ color: '#555' }}></i>}\r\n            </div>\r\n            <div className={style.itemTitle}>\r\n                <div className={done ? style.titleDone : style.titlePen}>\r\n                    {name.length <= 35 ? name : name.substring(0, 35) + '...'}\r\n                </div>\r\n                <div className={style.time}><Moment fromNow>{created}</Moment> {edited !== '' ? '(Đã sửa ' : ''}{edited !== '' ? <Moment fromNow>{edited}</Moment> : ''}{edited !== '' ? ')' : ''}</div>\r\n            </div>\r\n            <div className={style.itemMiddle}>\r\n                <div className={classPri}><div className={iconPri}></div> <span className={style.notMobile}>{priority}</span></div>\r\n            </div>\r\n            <div className={style.itemUD}>\r\n                <button className={style.btnCheck} onClick={() => checkTask(name)}>{done ? <i className=\"fa fa-minus-circle\" style={{ color: '#686868' }}></i> : <i className=\"fa fa-check-circle\"></i>}</button>\r\n                <button className={style.btnEdit} onClick={() => editTask()}><i className=\"fa fa-pen\"></i></button>\r\n                <button className={style.btnDelete} onClick={() => confirmDelete()}><i className=\"fa fa-trash\"></i></button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Item;\r\n","E:\\Source Code\\my-app\\src\\redux\\constants\\ActionTypes.js",[],"E:\\Source Code\\my-app\\src\\reducers\\TaskReducer.js",[],{"ruleId":"220","severity":1,"message":"221","line":8,"column":10,"nodeType":"222","messageId":"223","endLine":8,"endColumn":21},{"ruleId":"220","severity":1,"message":"224","line":9,"column":8,"nodeType":"222","messageId":"223","endLine":9,"endColumn":17},{"ruleId":"225","replacedBy":"226"},{"ruleId":"227","replacedBy":"228"},{"ruleId":"220","severity":1,"message":"229","line":3,"column":8,"nodeType":"222","messageId":"223","endLine":3,"endColumn":21},{"ruleId":"220","severity":1,"message":"230","line":16,"column":8,"nodeType":"222","messageId":"223","endLine":16,"endColumn":17},{"ruleId":"220","severity":1,"message":"231","line":8,"column":9,"nodeType":"222","messageId":"223","endLine":8,"endColumn":20},{"ruleId":"220","severity":1,"message":"232","line":7,"column":9,"nodeType":"222","messageId":"223","endLine":7,"endColumn":25},{"ruleId":"233","severity":1,"message":"234","line":41,"column":8,"nodeType":"235","endLine":41,"endColumn":21,"suggestions":"236"},{"ruleId":"220","severity":1,"message":"237","line":16,"column":5,"nodeType":"222","messageId":"223","endLine":16,"endColumn":15},{"ruleId":"220","severity":1,"message":"238","line":10,"column":5,"nodeType":"222","messageId":"223","endLine":10,"endColumn":11},{"ruleId":"220","severity":1,"message":"239","line":11,"column":5,"nodeType":"222","messageId":"223","endLine":11,"endColumn":10},{"ruleId":"220","severity":1,"message":"240","line":12,"column":5,"nodeType":"222","messageId":"223","endLine":12,"endColumn":14},{"ruleId":"220","severity":1,"message":"241","line":13,"column":5,"nodeType":"222","messageId":"223","endLine":13,"endColumn":16},{"ruleId":"220","severity":1,"message":"242","line":14,"column":5,"nodeType":"222","messageId":"223","endLine":14,"endColumn":16},{"ruleId":"220","severity":1,"message":"243","line":15,"column":5,"nodeType":"222","messageId":"223","endLine":15,"endColumn":14},{"ruleId":"220","severity":1,"message":"244","line":16,"column":5,"nodeType":"222","messageId":"223","endLine":16,"endColumn":8},{"ruleId":"220","severity":1,"message":"245","line":17,"column":5,"nodeType":"222","messageId":"223","endLine":17,"endColumn":8},{"ruleId":"220","severity":1,"message":"246","line":18,"column":5,"nodeType":"222","messageId":"223","endLine":18,"endColumn":10},{"ruleId":"220","severity":1,"message":"247","line":27,"column":11,"nodeType":"222","messageId":"223","endLine":27,"endColumn":17},"no-unused-vars","'createStore' is defined but never used.","Identifier","unusedVar","'myReducer' is defined but never used.","no-native-reassign",["248"],"no-negated-in-lhs",["249"],"'TodoContainer' is defined but never used.","'demoRedux' is defined but never used.","'dataMembers' is assigned a value but never used.","'handleAddNewTeam' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleCreateNew'. Either include it or remove the dependency array.","ArrayExpression",["250"],"'sortAction' is assigned a value but never used.","'Button' is defined but never used.","'Modal' is defined but never used.","'ModalBody' is defined but never used.","'ModalFooter' is defined but never used.","'ModalHeader' is defined but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Label' is defined but never used.","'toggle' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"251","fix":"252"},"Update the dependencies array to be: [allDataTeam, handleCreateNew]",{"range":"253","text":"254"},[999,1012],"[allDataTeam, handleCreateNew]"]